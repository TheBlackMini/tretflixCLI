# avoid double inclusion
if test "${storage__imported+defined}" == "defined"; then
  return 0
fi
storage__imported=1

function storage__root() {
  if test "${CLI_ARGS[3]+isset}"; then
    case "${CLI_ARGS[1]} ${CLI_ARGS[2]} ${CLI_ARGS[3]}" in
    	'cifs share add')
    	  storage__cifs_share_add
    	  ;;
    	'cifs share del')
    	  storage__cifs_share_del
    	  ;;
    	'nfs share add')
    	  storage__nfs_share_add
    	  ;;
    	'nfs share del')
    	  storage__nfs_share_del
    	  ;;
    	*)
        help__storage
    esac
  elif test "${CLI_ARGS[2]+isset}"; then
    case "${CLI_ARGS[1]} ${CLI_ARGS[2]}" in
      'show config')
        storage__show_config
        ;;
      'reset config')
        storage__reset_config
        ;;
      *)
        help__storage
    esac
  else
    help__storage
  fi
}

function storage__cifs_share_add() {
  cifstest=""
  if [ "${#CLI_ARGS[@]}" -eq 6 ]; then
    authtype="Anonymous"
    cifstest=$(tools__cifs_test ${CLI_ARGS[4]} ${CLI_ARGS[5]})
  elif [ "${#CLI_ARGS[@]}" -eq 9 ]; then
    case "${CLI_ARGS[6]}" in
      '-u' | '--user')
        authtype="User"
        cifstest=$(tools__cifs_test ${CLI_ARGS[4]} ${CLI_ARGS[5]} ${CLI_ARGS[7]} ${CLI_ARGS[8]})
        ;;
      *)
        help__storage
    esac
  else
    help__storage
  fi

  if [ "$cifstest" == "Success" ]; then

    share="//${CLI_ARGS[4]}/${CLI_ARGS[5]}"
    mntpoint="/mnt/${CLI_ARGS[4]}/${CLI_ARGS[5]}"

    if [ "$authtype" == "Anonymous" ]; then
      mountcmd="$share $mntpoint cifs auto,sec=ntlm 0 0"
    elif [ "$authtype" == "User" ]; then
      mountcmd="$share $mntpoint cifs auto,sec=ntlm,username=${CLI_ARGS[7]},password=${CLI_ARGS[8]} 0 0"
    fi

    if tools__share_exists $share $mntpoint; then
      echo "Error: CIFS share already configured in /etc/fstab"
      return 1
    elif tools__mntpoint_exists $mntpoint; then
      echo "Error: Mount Point already configured in /etc/fstab"
      return 1
    fi

    if tools__path_exists $mntpoint; then
      if [ "$(tools__path_istype $mntpoint)" != "Directory" ]; then
        echo "Error: Moint Point path already exists and cannot be used"
        return 1
      elif ! tools__dir_isempty $mntpoint; then
        echo "Error: Mount Point is not empty and cannot be used"
        return 1
      fi
    else
      mkdir -p $mntpoint
      if [ $? -ne 0 ]; then
        echo "Error: Failed to create the mount point"
        return 1
      fi
    fi
    
    sudo su -c "echo -e '$mountcmd' >> /etc/fstab"
    sudo mount $mntpoint
    if [ $? -eq 0 ]; then
      echo "CIFS share added"
    else
      echo "Error: Failed to mount $mntpoint"
      return 1
    fi

  else
    echo "Error: $cifstest"
    return 1
  fi
}

function storage__cifs_share_del() {
  if [ "${#CLI_ARGS[@]}" -eq 6 ]; then
    share="//${CLI_ARGS[4]}/${CLI_ARGS[5]}"
    mntpoint="/mnt/${CLI_ARGS[4]}/${CLI_ARGS[5]}"

    if tools__share_exists $share $mntpoint; then

      if tools__share_isactive $share $mntpoint; then
        sudo umount $mntpoint
        if [ $? -ne 0 ]; then
          echo "Error: Could not unmount the share"
          return 1
        fi
      fi

      sudo sed -i '\#^'"$share"' '"$mntpoint"'#d' /etc/fstab
      if ! tools__share_exists $share $mntpoint; then
        echo "Cifs share removed"
      else
        echo "Error: Could not remove the share from /etc/fstab"
        return 1
      fi

    else
      echo "Error: Share not found"
    fi

  else
    help__storage
  fi
}

function storage__nfs_share_add() {
  if [ "${#CLI_ARGS[@]}" -eq 6 ]; then
    echo "Debug: storage__add_nfs code goes here!"
  else
    help__storage
  fi
}

function storage__nfs_share_del() {
  if [ "${#CLI_ARGS[@]}" -eq 6 ]; then
    echo "Debug: storage__del_nfs code goes here!"
  else
    help__storage
  fi
}

function storage__show_config() {
  if [ "${#CLI_ARGS[@]}" -eq 3 ]; then
    echo "Debug: storage__show_config code goes here!"
  else
    help__storage
  fi
}

function storage__reset_config() {
  if [ "${#CLI_ARGS[@]}" -eq 3 ]; then
    echo "Debug: storage__reset_config code goes here!"
  else
    help__storage
  fi
}
