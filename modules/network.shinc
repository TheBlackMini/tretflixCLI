# avoid double inclusion
if test "${network__imported+defined}" == "defined"; then
  return 0
fi
network__imported=1

function network__help() {
  echo "Usage: tretflix network [COMMAND] [INPUT]"
  echo
  echo "COMMANDS:"
  echo "  tretflix network add ip [IPv4]"
  echo "  tretflix network del ip [IPv4]"
  echo "  tretflix network show config"
  echo
  exit 1
}

function network__command_handler() {
  if test "${CLI_ARGS[2]+isset}"; then
    case "${CLI_ARGS[1]} ${CLI_ARGS[2]}" in
      'add ip')
        network__add_ip
        ;;
      'del ip')
        network__del_ip
        ;;
      'show config')
        network__show_config
        ;;
      *)
        network__help
    esac	
  else
    network__help
  fi
}

function network__add_ip() {
  if [ "${#CLI_ARGS[@]}" -eq 4 ]; then
    ifaceIP="${CLI_ARGS[3]}"
    echo "$ifaceIP"
    ifaceNetmask="$(ifconfig eth0 | sed -rn '2s/ .*:(.*)$/\1/p')"
    echo "$ifaceNetmask"
    ifaceBroadcast=$(ipcalc $ifaceIP $ifaceNetmask | egrep "^Broadcast:" | awk '{ print $2}')
    echo "$ifaceBroadcast"
    ifaceNetwork=$(ipcalc $ifaceIP $ifaceNetmask | egrep "^Network:" | awk '{ print $2}' | sed 's/\/.*$//g')
    echo "$ifaceNetwork"
  else
    network__help
  fi

  tools__host_ping $ifaceIP > /dev/null 2>&1
  if [ $? -eq 0 ]; then
    echo "IP address already in use on the network"
    echo
    exit 1
  fi

  ifaceCount=$(cat /etc/network/interfaces | egrep "auto eth[0-9]:[0-9]" | sort | awk -F ":" '{ print $2 }' | wc -l)
  if [ "$ifaceCount" -eq 0 ]; then
    ifaceLabel="eth0:1"
  else
    ifaceGap=$(cat /etc/network/interfaces | egrep "auto eth[0-9]:[0-9]" | sort | awk -F ":" '{ print $2 }' | \
      awk '($1!=p+1){print p+1} {p=$1}')
    ifaceLast=$(cat /etc/network/interfaces | egrep "auto eth[0-9]:[0-9]" | sort | awk -F ":" '{ print $2 }' | tail -1)
    if [ "$ifaceGap" ]; then
      ifaceLabel="eth0:$ifaceGap"
    elif [ "$ifaceLast" ]; then
      ifaceLast=$(( $ifaceLast + 1 ))
      ifaceLabel="eth0:$ifaceLast"
    else
      echo "Unable to determine existing virtual interfaces"
      echo
      exit 1
    fi
  fi

  echo "Applying changes to the network..."
  # Add interface to network config
  echo -e "\n" \
    "# $ifaceLabel interface section start\n" \
    "# Added by tretflix, do not modify!\n" \
    "auto $ifaceLabel\n" \
    "iface $ifaceLabel inet static\n" \
    "\taddress $ifaceIP\n" \
    "\tnetmask $ifaceNetmask\n" \
    "\tnetwork $ifaceNetwork\n" \
    "\tbroadcast $ifaceBroadcast\n" \
    "# $ifaceLabel interface section end\n" \
    "\n" >> /etc/network/interfaces

  # Clean up network config file, remove start of line spaces
  sed -i 's/^ //g' /etc/network/interfaces

  # Clean up network config file, remove double (or more) blank lines
  sed -i '/^$/N;/^\n$/D' /etc/network/interfaces

  sudo /etc/init.d/networking restart > /dev/null 2>&1
  ifconfig $ifaceLabel up > /dev/null 2>&1
  
  echo "Done."
}

function network__del_ip() {
  if [ "${#CLI_ARGS[@]}" -eq 4 ]; then
    ifaceIP="${CLI_ARGS[3]}"
  else
    network__help
  fi

  ifaceLabel=$(ifconfig | awk '/'$ifaceIP'/ {print $1}' RS="\n\n")
  if [ ! "$ifaceLabel" ]; then
    echo "The IP address specified is not currently configured"
    echo
    exit 1
  fi

  if [ "$ifaceLabel" == "eth0" ]; then
    echo "The default interface (eth0) cannot be removed"
    echo
    exit 1
  fi

  if [ "$ifaceLabel" == "lo" ]; then
    echo "The loopback interface (lo) cannot be removed"
    echo
    exit 1
  fi

  if ! cat /etc/network/interfaces | grep -q "^# $ifaceLabel interface section start"; then
    echo "Only interfaces added by tretflix can be removed using this command"
    echo
    exit 1
  fi

  echo "Applying changes to the network..."
  ifconfig $ifaceLabel down > /dev/null 2>&1
  sed -i -n '1h;1!H;${;g;s/# '$ifaceLabel' interface section start.*# '$ifaceLabel' interface section end//g;p;}' \
    /etc/network/interfaces

  sed -i '/^$/N;/^\n$/D' /etc/network/interfaces

  sudo /etc/init.d/networking restart > /dev/null 2>&1
  echo "Done."
}

function network__show_config() {
  if [ "${#CLI_ARGS[@]}" -eq 3 ]; then
    ifconfig | grep -v "inet6" | egrep -A 2 "eth[0-9]|eth[0-9]:[0-9]" | sed 's/^--//g'
  else
    network__help
  fi
}
