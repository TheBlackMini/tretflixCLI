# avoid double inclusion
if test "${headphones__imported+defined}" == "defined"; then
  return 0
fi
headphones__imported=1

function headphones__get_status() {
  if service headphones status 2>&1 | grep -q "unrecognized service"; then
    status="Not Installed"
  elif service headphones status > /dev/null 2>&1; then
    status="Enabled|Running"
  elif ls /etc/rc?.d/*headphones > /dev/null 2>&1; then
    status="Enabled|Stopped"
  else
    status="Disabled"
  fi
  echo "$status"
}

function headphones__enable() {
  if [ "$(headphones__get_status)" == "Disabled" ]; then
    echo "* Enabling Headphones"
    update-rc.d headphones defaults
  fi
}

function headphones__disable() {
  if echo "$(headphones__get_status)" | grep -q "^Enabled"; then
    echo "* Disabling Headphones"
    update-rc.d -f headphones remove
  fi
}

function headphones__start() {
  if echo "$(headphones__get_status)" | grep -q "^Enabled"; then
    for i in {1..3}; do
      if [ $i -gt 1 ]; then
        sleep 2
      fi
      if [ "$(headphones__get_status)" != "Enabled|Running" ]; then
        service headphones start
      else
        break
      fi
    done
  fi
}

function headphones__stop() {
  for i in {1..3}; do
    if [ $i -gt 1 ]; then
      sleep 2
    fi
    if [ "$(headphones__get_status)" == "Enabled|Running" ]; then
      service headphones stop
    else
      break
    fi
  done
}

function headphones__set_username() {
  username="$1"

  sed -i -e '/^\[General\]/,/^\[/{/^\[General\]/n;/^\[/!{s/^http_username .*/http_username = '$username'/g}}' $headphonesConfig
}

function headphones__set_password() {
  password="$1"
  
  sed -i -e '/^\[General\]/,/^\[/{/^\[General\]/n;/^\[/!{s/^http_password .*/http_password = '$password'/g}}' $headphonesConfig
}

function headphones__set_port() {
  port="$1"

  sed -i -e '/^\[General\]/,/^\[/{/^\[General\]/n;/^\[/!{s/^http_port .*/http_port = '$port'/g}}' $headphonesConfig
}

function headphones__set_apikey() {
  apikey="$1"

  sed -i -e '/^\[General\]/,/^\[/{/^\[General\]/n;/^\[/!{s/^api_key .*/api_key = '$apikey'/g}}' $headphonesConfig
}

function headphones__get_username() {
  username=$(sed -n '/^\[General\]/,/^\[/p' $headphonesConfig | grep "^http_username " | awk '{ print $3 }')
  
  echo "$username"
}

function headphones__get_password() {
  password=$(sed -n '/^\[General\]/,/^\[/p' $headphonesConfig | grep "^http_password " | awk '{ print $3 }')
  
  echo "$password"
}

function headphones__get_port() {
  port=$(sed -n '/^\[General\]/,/^\[/p' $headphonesConfig | grep "^http_port " | awk '{ print $3 }')
  
  echo "$port"
}

function headphones__get_apikey() {
  apikey=$(sed -n '/^\[General\]/,/^\[/p' $headphonesConfig | grep "^api_key " | awk '{ print $3 }')
  
  echo "$apikey"
}

function headphones__show_config() {
  status=$(headphones__get_status)
  ipv4=$(tools__get_ip)
  
  username=$(headphones__get_username)
  password=$(headphones__get_password)
  port=$(headphones__get_port)
  apikey=$(headphones__get_apikey)

  echo "Headphones Config:"
  echo "----------------------------"
  echo "Status: $status"
  if [ "$status" == "Enabled|Running" ]; then
    echo "Web UI: http://$ipv4:$port/"
    echo
    echo "Username: $username"
    echo "Password: $password"
    echo "API Key: $apikey"
  fi
}

function headphones__install() {
  echo "* Installing Headphones"
}

function headphones__version_check() {
  if cd $headphonesSource && ! git fetch -v --dry-run 2>&1 | grep -iv "^from" | grep -ivq "\[up to date\]"; then
    echo "Headphones is up-to-date"
    false
  else
    true
  fi
}

function headphones__upgrade() {
  echo "* Upgrading Headphones"
  sudo su -c -u $osUser \
    "cd $headphonesSource && git remote update"
  sudo su -c -u $osUser \
    "cd $headphonesSource && git pull --all"
}

function headphones__sabnzbd_sync() {
  username=$(sabnzbd__get_username)
  password=$(sabnzbd__get_password)
  port=$(sabnzbd__get_port)
  apikey=$(sabnzbd__get_apikey)
  
  headphones__set_sabnzbd_username "$username"
  headphones__set_sabnzbd_password "$password"
  headphones__set_sabnzbd_port "$port"
  headphones__set_sabnzbd_apikey "$apikey"
}

function headphones__set_sabnzbd_username() {
  username="$1"
  
  sed -i -e '/^\[SABnzbd\]/,/^\[/{/^\[SABnzbd\]/n;/^\[/!{s/^sab_username .*/sab_username = '$username'/g}}' $headphonesConfig
}

function headphones__set_sabnzbd_password() {
  password="$1"
 
  sed -i -e '/^\[SABnzbd\]/,/^\[/{/^\[SABnzbd\]/n;/^\[/!{s/^sab_password .*/sab_password = '$password'/g}}' $headphonesConfig
}

function headphones__set_sabnzbd_port() {
  port="$1"

 sed -i -e '/^\[SABnzbd\]/,/^\[/{/^\[SABnzbd\]/n;/^\[/!{s/^sab_host .*/sab_host = http:\/\/localhost:'$port'\//g}}' $headphonesConfig
}

function headphones__set_sabnzbd_apikey() {
  apikey="$1"
  
  sed -i -e '/^\[SABnzbd\]/,/^\[/{/^\[SABnzbd\]/n;/^\[/!{s/^sab_apikey .*/sab_apikey = '$apikey'/g}}' $headphonesConfig
}

function headphones__fixit() {
  echo "Coming Soon..."
}