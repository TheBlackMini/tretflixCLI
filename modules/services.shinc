# avoid double inclusion
if test "${services__imported+defined}" == "defined"; then
  return 0
fi
services__imported=1

function services__help() {
  echo "Usage: tretflix services [OPTION] [COMMAND]"
  echo
  echo "COMMANDS:"
  echo "  tretflix services [OPTION] enable"
  echo "  tretflix services [OPTION] disable"
  echo "  tretflix services [OPTION] show config"
  echo
  echo "OPTIONS:"
  echo "  -a, --all"
  echo "  -p, --reverseproxy"
  echo
  echo "NOTES:" 
  echo "  Enabling the Reverse Proxy service will provide easier access to an app's"
  echo "  Web UI. Instead of specifying the app's port, it's alias can be used in the"
  echo "  URL (e.g., http://tretflix/nzbdrone)"
  echo
  exit 1
}

function services__command_handler() {
  if test "${CLI_ARGS[3]+isset}"; then
    case "${CLI_ARGS[2]} ${CLI_ARGS[3]}" in
      'show config')
        if [ "${#CLI_ARGS[@]}" -eq 4 ]; then
          services__show_config "${CLI_ARGS[1]}"
        else
          services__help
        fi
        ;;			
      *)
        services__help
    esac
  elif test "${CLI_ARGS[2]+isset}"; then
    case "${CLI_ARGS[2]}" in
      enable)
        if [ "${#CLI_ARGS[@]}" -eq 3 ]; then
          services__enable "${CLI_ARGS[1]}"
        else
          services__help
        fi
        ;;
      disable)
        if [ "${#CLI_ARGS[@]}" -eq 3 ]; then
          services__disable "${CLI_ARGS[1]}"
        else
          services__help
        fi
        ;;
      *)
        services__help
    esac
  else
    services__help
  fi
}

function services__enable() {
  option="$1"

	case "$option" in
		'-a' | '--all')
			services__proxy "enable"
			
			echo
			services__proxy "show config"
			;;
		'-p' | '--reverseproxy')
			services__proxy "enable"
			
			echo
			services__proxy "show config"
			;;
		*)
			services__help
	esac
}

function services__disable() {
  option="$1"

	case "$option" in
		'-a' | '--all')
			services__proxy "disable"
			
			echo
			services__proxy "show config"
			;;
		'-p' | '--reverseproxy')
			services__proxy "disable"
			
			echo
			services__proxy "show config"
			;;
		*)
			services__help
	esac
}

function services__show_config() {
  option="$1"

	case "$option" in
		'-a' | '--all')
			services__proxy "show config"
			;;
		'-p' | '--reverseproxy')
			services__proxy "show config"
			;;
		*)
			services__help
	esac
}

function services__proxy() {
  option="$1"
  
  if [ "$option" == "enable" ]; then
  
    # If the service is already enabled and running there's nothing to do
    if [ "$(proxy__get_status)" == "Enabled|Running" ]; then
      echo "The Reverse Proxy is already enabled"
    
    # If the service is already enabled but stopped, start the service
    elif [ "$(proxy__get_status)" == "Enabled|Stopped" ]; then
		  # Start the service
		  proxy__start
		  
		# If the service is not enabled, Install (or Upgrade) the service as needed, update
		# the config as necessary to support the other associated services and start the service
		elif ! echo "$(proxy__get_status)" | grep -q "^Enabled"; then
		
		  # Install the service
			if [ "$(proxy__get_status)" == "Not Installed" ]; then
				proxy__install
			fi
			
			# Enable the service
			proxy__enable

			# Sync w/ current port settings
			echo "* Configuring the Reverse Proxy"

			if echo "$(couchpotato__get_status)" | grep -q "^Enabled"; then
			  couchpotatoPort=$(couchpotato__get_port)
				proxy__config_couchpotato "$couchpotatoPort"
				
				couchpotato__config_proxy
				couchpotato__start
			fi
			if echo "$(headphones__get_status)" | grep -q "^Enabled"; then
			  headphonesPort=$(headphones__get_port)
				proxy__config_headphones "$headphonesPort"
				
				headphones__config_proxy
				headphones__start
			fi
			if echo "$(nzbdrone__get_status)" | grep -q "^Enabled"; then
			  nzbdronePort=$(nzbdrone__get_port)
				proxy__config_nzbdrone "$nzbdronePort"
				
				nzbdrone__config_proxy
				nzbdrone__start
			fi
			if echo "$(sabnzbd__get_status)" | grep -q "^Enabled"; then
			  sabnzbdPort=$(sabnzbd__get_port)
				proxy__config_sabnzbd "$sabnzbdPort"
			fi
			if echo "$(sickbeard__get_status)" | grep -q "^Enabled"; then
			  sickbeardPort=$(sickbeard__get_port)
				proxy__config_sickbeard "$sickbeardPort"
				
				sickbeard__config_proxy
				sickbeard__start
			fi
			if echo "$(transmission__get_status)" | grep -q "^Enabled"; then
			  transmissionPort=$(transmission__get_port)
				proxy__config_transmission "$transmissionPort"
			fi
			
			# Start the service
			proxy__start

		elif [ "$(proxy__get_status)" == "Enabled|Stopped" ]; then
		  # Start the service
		  proxy__start
		else
		  echo "The Reverse Proxy service is already enabled and running"
		fi
		
  elif [ "$option" == "disable" ]; then
	  proxy__stop
		proxy__disable
		 
  elif [ "$option" == "show config" ]; then
    proxy__show_config
  
  fi
}