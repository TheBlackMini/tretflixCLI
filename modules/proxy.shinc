# avoid double inclusion
if test "${proxy__imported+defined}" == "defined"; then
  return 0
fi
proxy__imported=1


# Service Status & App Config Output
# ---------------------------------------------------------------------------------------

function proxy__get_status() {
  if service apache2 status 2>&1 | grep -q "unrecognized service"; then
    status="Not Installed"
  elif service apache2 status > /dev/null 2>&1; then
    if ls /etc/rc?.d/*apache2 > /dev/null 2>&1; then
      status="Enabled|Running"
    else
      status="Disabled|Running"
    fi
  elif ls /etc/rc?.d/*apache2 > /dev/null 2>&1; then
    status="Enabled|Stopped"
  else
    status="Disabled|Stopped"
  fi
  echo "$status"
}

function proxy__show_config() {
  echo "Reverse Proxy: $(proxy__get_status)"
}


# Service Controls
# ---------------------------------------------------------------------------------------

function proxy__enable() {
  if echo "$(proxy__get_status)" | grep -q "^Disabled"; then
    echo "* Enabling Reverse Proxy"
    update-rc.d apache2 defaults
  fi
}

function proxy__disable() {
  if echo "$(proxy__get_status)" | grep -q "^Enabled"; then
    echo "* Disabling Reverse Proxy"
    proxy__stop
    update-rc.d -f apache2 remove
  fi
}

function proxy__start() {
  if echo "$(proxy__get_status)" | grep -q "^Enabled"; then
    for i in {1..3}; do
      if [ $i -gt 1 ]; then
        sleep 2
      fi
      if [ "$(proxy__get_status)" != "Enabled|Running" ]; then
        service apache2 start 2> /dev/null
      else
        break
      fi
    done
  fi
}

function proxy__stop() {
  for i in {1..3}; do
    if [ $i -gt 1 ]; then
      sleep 2
    fi
    if echo "$(proxy__get_status)" | grep -q "Running$"; then
      service apache2 stop 2> /dev/null
    else
      break
    fi
  done
}


# Get App Configuration
# ---------------------------------------------------------------------------------------


# Set App Configuration
# ---------------------------------------------------------------------------------------

function proxy__set_couchpotato_location() {
	host="$1"
	host=$(echo "$host" | sed 's/\//\\\//g')
	
	if ! grep -q "<Location /couchpotato>" "$proxyConfig"; then
	  location="
	    <Location /couchpotato>
      order deny,allow
      deny from all
      allow from all
      ProxyPass http://$host/couchpotato
      ProxyPassReverse http://$host/couchpotato
      </Location>"
      
    location=$(echo "$location" | sed -e 's/^[ \t]*//')

    proxy__stop
    echo "$location" >> $proxyConfig
  else
    proxy__stop
	  sed -i '/^ProxyPass http:.*couchpotato$/s/localhost:[0-9]*/'$host'/' $proxyConfig
	  sed -i '/^ProxyPassReverse http:.*couchpotato$/s/localhost:[0-9]*/'$host'/' $proxyConfig
	fi
}

function proxy__set_headphones_location() {
	host="$1"
	host=$(echo "$host" | sed 's/\//\\\//g')
	
	if ! grep -q "<Location /headphones>" "$proxyConfig"; then
	  location="
	    <Location /headphones>
      order deny,allow
      deny from all
      allow from all
      ProxyPass http://$host/headphones
      ProxyPassReverse http://$host/headphones
      </Location>"
      
    location=$(echo "$location" | sed -e 's/^[ \t]*//')
    
    proxy__stop
    echo "$location" >> $proxyConfig 
  else
    proxy__stop
	  sed -i '/^ProxyPass http:.*headphones$/s/localhost:[0-9]*/'$host'/' $proxyConfig
	  sed -i '/^ProxyPassReverse http:.*headphones$/s/localhost:[0-9]*/'$host'/' $proxyConfig
	fi
}

function proxy__set_nzbdrone_location() {
	host="$1"
	host=$(echo "$host" | sed 's/\//\\\//g')
	
	if ! grep -q "<Location /nzbdrone>" "$proxyConfig"; then
	  location="
	    <Location /nzbdrone>
      order deny,allow
      deny from all
      allow from all
      ProxyPass http://$host/nzbdrone
      ProxyPassReverse http://$host/nzbdrone
      </Location>"
      
    location=$(echo "$location" | sed -e 's/^[ \t]*//')

    proxy__stop
    echo "$location" >> $proxyConfig
  else
    proxy__stop
	  sed -i '/^ProxyPass http:.*nzbdrone$/s/localhost:[0-9]*/'$host'/' $proxyConfig
	  sed -i '/^ProxyPassReverse http:.*nzbdrone$/s/localhost:[0-9]*/'$host'/' $proxyConfig
	fi
}

function proxy__set_sabnzbd_location() {
	host="$1"
	host=$(echo "$host" | sed 's/\//\\\//g')
	
	if ! grep -q "<Location /sabnzbd>" "$proxyConfig"; then
	  location="
	    <Location /sabnzbd>
      order deny,allow
      deny from all
      allow from all
      ProxyPass http://$host/sabnzbd
      ProxyPassReverse http://$host/sabnzbd
      </Location>"
      
    location=$(echo "$location" | sed -e 's/^[ \t]*//')

    proxy__stop
    echo "$location" >> $proxyConfig  
  else
    proxy__stop
	  sed -i '/^ProxyPass http:.*sabnzbd$/s/localhost:[0-9]*/'$host'/' $proxyConfig
	  sed -i '/^ProxyPassReverse http:.*sabnzbd$/s/localhost:[0-9]*/'$host'/' $proxyConfig
	fi
}

function proxy__set_sickbeard_location() {
	host="$1"
	host=$(echo "$host" | sed 's/\//\\\//g')
	
	if ! grep -q "<Location /sickbeard>" "$proxyConfig"; then
	  location="
	    <Location /sickbeard>
      order deny,allow
      deny from all
      allow from all
      ProxyPass http://$host/sickbeard
      ProxyPassReverse http://$host/sickbeard
      </Location>"
      
    location=$(echo "$location" | sed -e 's/^[ \t]*//')

    proxy__stop
    echo "$location" >> $proxyConfig
  else
    proxy__stop
	  sed -i '/^ProxyPass http:.*sickbeard$/s/localhost:[0-9]*/'$host'/' $proxyConfig
	  sed -i '/^ProxyPassReverse http:.*sickbeard$/s/localhost:[0-9]*/'$host'/' $proxyConfig
	fi
}

function proxy__set_transmission_location() {
	host="$1"
	host=$(echo "$host" | sed 's/\//\\\//g')
	
	if ! grep -q "<Location /transmission>" "$proxyConfig"; then
	  location="
	    <Location /transmission>
      order deny,allow
      deny from all
      allow from all
      ProxyPass http://$host/transmission
      ProxyPassReverse http://$host/transmission
      </Location>"
      
    location=$(echo "$location" | sed -e 's/^[ \t]*//')

    proxy__stop
    echo "$location" >> $proxyConfig
  else
    proxy__stop
	  sed -i '/^ProxyPass http:.*transmission$/s/localhost:[0-9]*/'$host'/' $proxyConfig
	  sed -i '/^ProxyPassReverse http:.*transmission$/s/localhost:[0-9]*/'$host'/' $proxyConfig
	fi
}


# Enable, Disable & Configure Supporting Apps
# ---------------------------------------------------------------------------------------

# CouchPotato Section
# ---------------------------

function proxy__config_couchpotato() {
	port="$1"
	host="localhost"

  proxy__set_couchpotato_location "$host:$port"
}

# Headphones Section
# ---------------------------

function proxy__config_headphones() {
	port="$1"
  host="localhost"
  
  proxy__set_headphones_location "$host:$port"
}

# NzbDrone Section
# ---------------------------

function proxy__config_nzbdrone() {
	port="$1"
  host="localhost"
  
  proxy__set_nzbdrone_location "$host:$port"
}

# SABnzbd Section
# ---------------------------

function proxy__config_sabnzbd() {
	port="$1"
  host="localhost"
  
  proxy__set_sabnzbd_location "$host:$port"
}

# Sick Beard Section
# ---------------------------

function proxy__config_sickbeard() {
	port="$1"
  host="localhost"
  
  proxy__set_sickbeard_location "$host:$port"
}

# Transmission Section
# ---------------------------

function proxy__config_transmission() {
	port="$1"
  host="localhost"
  
  proxy__set_transmission_location "$host:$port"
}


# Install, Configure & Upgrade
# ---------------------------------------------------------------------------------------

function proxy__install() {
  echo "* Installing Reverse Proxy"

  # Install Dependencies
  #### Not Needed, apt-get handles this

  # Install Apache2
  apt-get -q -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" \
    install apache2
  
  # Stop and Disable, apt-get install sometimes automatically enables and starts apps
  proxy__stop
  proxy__disable
  
  # Link the necessary modules (enables them)
  if [ ! -f "/etc/apache2/mods-enabled/proxy.load" ]; then
    ln -s /etc/apache2/mods-available/proxy.load /etc/apache2/mods-enabled/proxy.load
  fi
  
  if [ ! -f "/etc/apache2/mods-enabled/proxy_http.load" ]; then
    ln -s /etc/apache2/mods-available/proxy_http.load /etc/apache2/mods-enabled/proxy_http.load
  fi
  
  if [ ! -f "/etc/apache2/sites-enabled/proxiedhosts" ]; then
    ln -s /etc/apache2/sites-available/proxiedhosts /etc/apache2/sites-enabled/proxiedhosts
  fi
  
  if [ ! -f "/etc/apache2/sites-available/proxiedhosts" ]; then
    tar xf $configBundle --strip-components 2 -C /etc/apache2/sites-available/ config/apache2/proxiedhosts
  fi
}


# Misc, Extras
# ---------------------------------------------------------------------------------------

function proxy__fixit() {
  echo "Coming Soon"
}