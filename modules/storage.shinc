# avoid double inclusion
if test "${storage__imported+defined}" == "defined"; then
  return 0
fi
storage__imported=1

function storage__root() {
  if test "${CLI_ARGS[3]+isset}"; then
    case "${CLI_ARGS[1]} ${CLI_ARGS[2]} ${CLI_ARGS[3]}" in
    	'mount cifs share')
    	  storage__mount_cifs_share
    	  ;;
    	'mount nfs share')
    	  storage__mount_nfs_share
    	  ;;
    	'umount cifs share')
    	  storage__umount_cifs_share
    	  ;;
    	'umount nfs share')
    	  storage__umount_nfs_share
    	  ;;    	  
    	*)
        help__storage
    esac
  elif test "${CLI_ARGS[2]+isset}"; then
    case "${CLI_ARGS[1]} ${CLI_ARGS[2]}" in
      'show shares')
        storage__show_shares
        ;;
      *)
        help__storage
        return 1
    esac
  else
    help__storage
    return 1
  fi
}

function storage__mount_cifs_share() {
  if [ "${#CLI_ARGS[@]}" -eq 6 ]; then
    authtype="Anonymous"
    tools__cifs_test ${CLI_ARGS[4]} ${CLI_ARGS[5]}
  elif [ "${#CLI_ARGS[@]}" -eq 9 ]; then
    case "${CLI_ARGS[6]}" in
      '-u' | '--user')
        authtype="User"
        tools__cifs_test ${CLI_ARGS[4]} ${CLI_ARGS[5]} ${CLI_ARGS[7]} ${CLI_ARGS[8]}
        ;;
      *)
        help__storage
        return 1
    esac
  else
    help__storage
    return 1
  fi

  if [ $? -eq 0 ]; then

    share="//${CLI_ARGS[4]}/${CLI_ARGS[5]}"
    mntpoint="/mnt/${CLI_ARGS[4]}/${CLI_ARGS[5]}"

    if [ "$authtype" == "Anonymous" ]; then
      mountcmd="$share $mntpoint cifs auto,sec=ntlm 0 0"
    else
      mountcmd="$share $mntpoint cifs auto,sec=ntlm,username=${CLI_ARGS[7]},password=${CLI_ARGS[8]} 0 0"
    fi

    if tools__share_exists $share $mntpoint; then
      echo "The CIFS share '$share' already exists in /etc/fstab"
      return 1
    elif tools__mntpoint_exists $mntpoint; then
      echo "The mount point '$mntpoint' already exists in /etc/fstab"
      return 1
    fi

    if tools__path_exists $mntpoint; then
      if [ "$(tools__path_istype $mntpoint)" != "Directory" ]; then
        echo "The moint point '$mntpoint' already exists and cannot be used"
        return 1
      elif ! tools__dir_isempty $mntpoint; then
        echo "The mount point '$mntpoint' is not empty and cannot be used"
        return 1
      fi
    else
      mkdir -p $mntpoint
      if [ $? -ne 0 ]; then
        echo "Failed to create the mount point '$mntpoint'"
        return 1
      fi
    fi
    
    sudo su -c "echo -e '$mountcmd' >> /etc/fstab"
    sudo mount $mntpoint
    if [ $? -eq 0 ]; then
      echo "CIFS share added"
      return 0
    else
      echo "Failed to mount the CIFS share '$share'"
      return 1
    fi
  else
    return 1
  fi
}

function storage__mount_nfs_share() {
  if [ "${#CLI_ARGS[@]}" -eq 6 ]; then
    tools__nfs_test ${CLI_ARGS[4]} ${CLI_ARGS[5]}
  else
    help__storage
    return 1
  fi

  if [ $? -eq 0 ]; then

    share="${CLI_ARGS[4]}:${CLI_ARGS[5]}"
    mntpoint="/mnt/${CLI_ARGS[4]}${CLI_ARGS[5]}"

    mountcmd="$share $mntpoint nfs auto 0 0"

    if tools__share_exists $share $mntpoint; then
      echo "The NFS share '$share' already exists in /etc/fstab"
      return 1
    elif tools__mntpoint_exists $mntpoint; then
      echo "The mount point '$mntpoint' already exists in /etc/fstab"
      return 1
    fi

    if tools__path_exists $mntpoint; then
      if [ "$(tools__path_istype $mntpoint)" != "Directory" ]; then
        echo "The moint point '$mntpoint' already exists and cannot be used"
        return 1
      elif ! tools__dir_isempty $mntpoint; then
        echo "The mount point '$mntpoint' is not empty and cannot be used"
        return 1
      fi
    else
      mkdir -p $mntpoint
      if [ $? -ne 0 ]; then
        echo "Failed to create the mount point '$mntpoint'"
        return 1
      fi
    fi

    sudo su -c "echo -e '$mountcmd' >> /etc/fstab"
    sudo mount $mntpoint
    if [ $? -eq 0 ]; then
      echo "NFS share added"
      return 0
    else
      echo "Failed to mount the NFS share '$share'"
      return 1
    fi
  else
    return 1
  fi
}

function storage__umount_cifs_share() {
  if [ "${#CLI_ARGS[@]}" -eq 6 ]; then
    share="//${CLI_ARGS[4]}/${CLI_ARGS[5]}"
    mntpoint="/mnt/${CLI_ARGS[4]}/${CLI_ARGS[5]}"

    if tools__share_exists $share $mntpoint; then

      if tools__share_isactive $share $mntpoint; then
        sudo umount $mntpoint
        if [ $? -ne 0 ]; then
          echo "Failed to unmount the CIFS share"
          return 1
        fi
      fi

      sudo sed -i '\#^'"$share"' '"$mntpoint"'#d' /etc/fstab
      if ! tools__share_exists $share $mntpoint; then
        echo "CIFS share removed"
      else
        echo "Failed to remove the CIFS share entry from /etc/fstab"
        return 1
      fi

    else
      echo "No such CIFS share entry found in /etc/fstab"
    fi

  else
    help__storage
  fi
}

function storage__umount_nfs_share() {
  if [ "${#CLI_ARGS[@]}" -eq 6 ]; then
    share="${CLI_ARGS[4]}:${CLI_ARGS[5]}"
    mntpoint="/mnt/${CLI_ARGS[4]}${CLI_ARGS[5]}"

    if tools__share_exists $share $mntpoint; then

      if tools__share_isactive $share $mntpoint; then
        sudo umount $mntpoint
        if [ $? -ne 0 ]; then
          echo "Failed to unmount the NFS share"
          return 1
        fi
      fi

      sudo sed -i '\#^'"$share"' '"$mntpoint"'#d' /etc/fstab
      if ! tools__share_exists $share $mntpoint; then
        echo "NFS share removed"
      else
        echo "Failed to remove the NFS share entry from /etc/fstab"
        return 1
      fi

    else
      echo "No such NFS share entry found in /etc/fstab"
    fi

  else
    help__storage
  fi
}

function storage__show_shares() {
  if [ "${#CLI_ARGS[@]}" -eq 3 ]; then
    if df -hT | egrep -q "[[:space:]]cifs[[:space:]]|[[:space:]]nfs[[:space:]]"; then
      df -hT | egrep "^Filesystem[[:space:]]|[[:space:]]cifs[[:space:]]|[[:space:]]nfs[[:space:]]"
    else
      echo "There are no mounted shares"
    fi
  else
    help__storage
  fi
}