# avoid double inclusion
if test "${nzbdrone__imported+defined}" == "defined"; then
  return 0
fi
nzbdrone__imported=1

function nzbdrone__get_status() {
  if service nzbdrone status 2>&1 | grep -q "unrecognized service"; then
    status="Not Installed"
  elif service nzbdrone status 2>&1 | egrep -q "start|running"; then
    status="Enabled|Running"
  elif ! ls -l /etc/init/nzbdrone.override > /dev/null 2>&1; then
    status="Enabled|Stopped"
  else
    status="Disabled"
  fi
  echo "$status"
}

function nzbdrone__enable() {
  if [ "$(nzbdrone__get_status)" == "Disabled" ]; then
    rm -v /etc/init/nzbdrone.override
  fi
}

function nzbdrone__disable() {
  if echo "$(nzbdrone__get_status)" | grep -q "^Enabled"; then
    tar xf $configBundle --strip-components 2 -C /etc/init/ config/init/nzbdrone.override
  fi
}

function nzbdrone__start() {
  if echo "$(nzbdrone__get_status)" | grep -q "^Enabled"; then
    for i in {1..3}; do
      if [ $i -gt 1 ]; then
        sleep 2
      fi
      if [ "$(nzbdrone__get_status)" != "Enabled|Running" ]; then
        service nzbdrone start
      else
        break
      fi
    done
  fi
}

function nzbdrone__stop() {
  for i in {1..3}; do
    if [ $i -gt 1 ]; then
      sleep 2
    fi
    if [ "$(nzbdrone__get_status)" == "Enabled|Running" ]; then
      service nzbdrone stop
    else
      break
    fi
  done
}

function nzbdrone__set_username() {
  username="$1"

  sed -i 's#\(<Username>\).*\(</Username>\)#\1'$username'\2#g' $nzbdroneConfig
}

function nzbdrone__set_password() {
  password="$1"

  sed -i 's#\(<Password>\).*\(</Password>\)#\1'$password'\2#g' $nzbdroneConfig
}

function nzbdrone__set_port() {
  port="$1"

  sed -i 's#\(<Port>\).*\(</Port>\)#\1'$port'\2#g' $nzbdroneConfig
}

function nzbdrone__set_apikey() {
  apikey="$1"

  sed -i 's#\(<ApiKey>\).*\(</ApiKey>\)#\1'$apikey'\2#g' $nzbdroneConfig
}

function nzbdrone__get_username() {
  username=$(grep "<Username>.*</Username>" $nzbdroneConfig | awk -F "[<>]" '{ print $3 }')
  
  echo "$username"
}

function nzbdrone__get_password() {
  password=$(grep "<Password>.*</Password>" $nzbdroneConfig | awk -F "[<>]" '{ print $3 }')
  
  echo "$password"
}

function nzbdrone__get_port() {
  port=$(grep "<Port>.*</Port>" $nzbdroneConfig | awk -F "[<>]" '{ print $3 }')
  
  echo "$port"
}

function nzbdrone__get_apikey() {
  apikey=$(grep "<ApiKey>.*</ApiKey>" $nzbdroneConfig | awk -F "[<>]" '{ print $3 }')
  
  echo "$apikey"
}

function nzbdrone__show_config() {
  status=$(nzbdrone__get_status)
  ipv4=$(tools__get_ip)
  
  username=$(nzbdrone__get_username)
  password=$(nzbdrone__get_password)
  port=$(nzbdrone__get_port)
  apikey=$(nzbdrone__get_apikey)

  echo "NzbDrone Config:"
  echo "----------------------------"
  echo "Status: $status"
  if [ "$status" == "Enabled|Running" ]; then
    echo "Web UI: http://$ipv4:$port/"
    echo
    echo "Username: $username"
    echo "Password: $password"
    echo "Web Port: $port"
    echo "API Key: $apikey"
  fi
}

function nzbdrone__install() {
  # Add apt repository to sources.list
  if ! grep -q "^deb http://update.nzbdrone.com/repos/apt/debian" /etc/apt/sources.list; then 
    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys FDA5DFFC
    echo "deb http://update.nzbdrone.com/repos/apt/debian master main" | tee -a /etc/apt/sources.list
  fi
  
  # Update apt repository package lists
  apt-get update
  
  # Install NzbDrone
  apt-get -q -y install nzbdrone sqlite3
  
  # Create the sabnzbd+ temp dir for nzbdrone downloads
  if ! tools__path_exists "/opt/tretflix/tmp/sabnzbdplus/nzbdrone"; then
    sudo su -c -u $osUser \
      "mkdir /opt/tretflix/tmp/sabnzbdplus/nzbdrone"
  fi
  
  # Create a symbolic link for NzbDrone config (Can't configure appdata dir)
  if ! tools__path_exists "/home/sysadmin/.config/NzbDrone"; then
  
    # Create the ~/.config directory
    if ! tools__path_exists "/home/sysadmin/.config"; then
      sudo su -c -u $osUser \
        "mkdir /home/sysadmin/.config"
    fi
    
    # Create the symbolic link in ~/.config
    sudo su -c -u $osUser \
      "ln -s /opt/tretflix/appdata/nzbdrone/ /home/sysadmin/.config/NzbDrone"
  fi
  
  # Copy runlevel config files into init
  if ! tools__path_exists "/etc/init/nzbdrone.conf"; then
    tar xf $configBundle --strip-components 2 -C /etc/init/ config/init/nzbdrone.conf
  fi
  if ! tools__path_exists "/etc/init/nzbdrone.override"; then
    tar xf $configBundle --strip-components 2 -C /etc/init/ config/init/nzbdrone.override
  fi
  
  # Copy the app data dir into appdata/
  if ! tools__path_exists "/opt/tretflix/appdata/nzbdrone"; then
    sudo su -c -u $osUser \
      "tar xf $appdataBundle --strip-components 1 -C $tretflixPath/appdata/ appdata/nzbdrone"
  fi
    
  # Add the nzbdrone category to the SABnzbd config
  if ! egrep "^\[\[nzbdrone\]\]" $sabnzbdConfig; then
    sabnzbd__stop
    sed -i '/^\[categories\].*/a \
      [[nzbdrone]]\npriority = -100 pp = ""\nname = nzbdrone\nscript = Default\nnewzbin = ""\ndir = nzbdrone' $sabnzbdConfig
    sabnzbd__start
  fi
}

function nzbdrone__version_check() {
  output=$(apt-cache policy nzbdrone 2>&1)
  installedVers=$(echo "$output" | grep "Installed:" | awk '{ print $2 }')
  candidateVers=$(echo "$output" | grep "Candidate:" | awk '{ print $2 }')

  if [ "$installedVers" == "$candidateVers" ]; then
    false
  else
    true
  fi
}

function nzbdrone__upgrade() {
  apt-get -y install nzbdrone
}

function nzbdrone__sabnzbd_sync() {
  username=$(sabnzbd__get_username)
  password=$(sabnzbd__get_password)
  port=$(sabnzbd__get_port)
  apikey=$(sabnzbd__get_apikey)
  
  nzbdrone__set_sabnzbd_username "$username"
  nzbdrone__set_sabnzbd_password "$password"
  nzbdrone__set_sabnzbd_port "$port"
  nzbdrone__set_sabnzbd_apikey "$apikey"
}

function nzbdrone__set_sabnzbd_username() {
  username="$1"
  
  sqlite3 $nzbdroneDB "UPDATE Config SET value='$username' WHERE key='sabusername'"
}

function nzbdrone__set_sabnzbd_password() {
  password="$1"
 
  sqlite3 $nzbdroneDB "UPDATE Config SET value='$password' WHERE key='sabpassword'"
}

function nzbdrone__set_sabnzbd_port() {
  port="$1"

 sqlite3 $nzbdroneDB "UPDATE Config SET value='$port' WHERE key='sabport'"
}

function nzbdrone__set_sabnzbd_apikey() {
  apikey="$1"
  
  sqlite3 $nzbdroneDB "UPDATE Config SET value='$apikey' WHERE key='sabapikey'"
}