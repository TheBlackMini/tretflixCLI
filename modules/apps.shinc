# avoid double inclusion
if test "${apps__imported+defined}" == "defined"; then
  return 0
fi
apps__imported=1

function apps__help() {
  echo "Usage: tretflix apps [OPTION] [COMMAND] [INPUT]"
  echo
  echo "COMMANDS:"
  echo "  tretflix apps [OPTION] enable"
  echo "  tretflix apps [OPTION] disable"
  echo "  tretflix apps [OPTION] upgrade"
  echo "  tretflix apps [OPTION] set username [USERNAME]"
  echo "  tretflix apps [OPTION] set password [PASSWORD]"
  echo "  tretflix apps [OPTION] set port [PORT]"
  echo "  tretflix apps [OPTION] new apikey"
  echo "  tretflix apps [OPTION] show config"
  echo
  echo "OPTIONS:"
  echo "  -a, --all"
  echo "  -c, --couchpotato"
  echo "  -h, --headphones"
  echo "  -n, --nzbdrone"
  echo "  -p, --plexserver"
  echo "  -s, --sabnzbd"
  echo "  -b, --sickbeard"
  echo "  -t, --transmission"
  echo
  echo "NOTES:" 
  echo "  The 'new apikey' command is only available for the apps that use"
  echo "  api keys. The 'set port' command requires an individual app to be"
  echo "  specified."
  echo
  exit 1
}

function apps__command_handler() {
  if test "${CLI_ARGS[3]+isset}"; then
    case "${CLI_ARGS[2]} ${CLI_ARGS[3]}" in
      'set username')
        if [ "${#CLI_ARGS[@]}" -eq 5 ]; then
          apps__set_username "${CLI_ARGS[1]}" "${CLI_ARGS[4]}"
        else
          apps__help
        fi
        ;;
      'set password')
        if [ "${#CLI_ARGS[@]}" -eq 5 ]; then
          apps__set_password "${CLI_ARGS[1]}" "${CLI_ARGS[4]}"
        else
          apps__help
        fi
        ;;
      'set port')
        if [ "${#CLI_ARGS[@]}" -eq 5 ]; then
          apps__set_port "${CLI_ARGS[1]}" "${CLI_ARGS[4]}"
        else
          apps__help
        fi
        ;;
      'new apikey')
        if [ "${#CLI_ARGS[@]}" -eq 4 ]; then
          apps__new_apikey "${CLI_ARGS[1]}"
        else
          apps__help
        fi
        ;;
      'show config')
        if [ "${#CLI_ARGS[@]}" -eq 4 ]; then
          apps__show_config "${CLI_ARGS[1]}"
        else
          apps__help
        fi
        ;;			
      *)
        apps__help
    esac
  elif test "${CLI_ARGS[2]+isset}"; then
    case "${CLI_ARGS[2]}" in
      enable)
        if [ "${#CLI_ARGS[@]}" -eq 3 ]; then
          apps__enable "${CLI_ARGS[1]}"
        else
          apps__help
        fi
        ;;
      disable)
        if [ "${#CLI_ARGS[@]}" -eq 3 ]; then
          apps__disable "${CLI_ARGS[1]}"
        else
          apps__help
        fi
        ;;
      upgrade)
        if [ "${#CLI_ARGS[@]}" -eq 3 ]; then
          apps__upgrade "${CLI_ARGS[1]}"
        else
          apps__help
        fi
        ;;
      *)
        apps__help
    esac
  else
    apps__help
  fi
}

function apps__enable() {
  option="$1"

	case "$option" in
		'-a' | '--all')
			echo "* Updating apt repository package lists"
			apt-get update
			
      apps__couchpotato "enable"
      apps__headphones "enable"
      apps__nzbdrone "enable"
      apps__plexserver "enable"
      apps__sabnzbd "enable"
      apps__sickbeard "enable"
      apps__transmission "enable"

			echo
			apps__show_config "--all"
			;;
		'-c' | '--couchpotato')
      apps__couchpotato "enable"
			
			echo
			couchpotato__show_config
			;;
		'-h' | '--headphones')
      apps__headphones "enable"
			
			echo
			headphones__show_config
			;;
		'-n' | '--nzbdrone')
			echo "* Updating apt repository package lists"
			apt-get update

      apps__nzbdrone "enable"
			
			echo
			nzbdrone__show_config
			;;
		'-p' | '--plexserver')
      apps__plexserver "enable"
			
			echo
			plexserver__show_config
			;;
		'-s' | '--sabnzbd')
			echo "* Updating apt repository package lists"
			apt-get update
			
      apps__sabnzbd "enable"
			
			echo
			sabnzbd__show_config
			;;
		'-b' | '--sickbeard')
      apps__sickbeard "enable"

			echo
			sickbeard__show_config
			;;
		'-t' | '--transmission')
			echo "* Updating apt repository package lists"
			apt-get update
			
      apps__transmission "enable"
			
			echo
			transmission__show_config
			;;
		*)
			apps__help
	esac
}

function apps__disable() {
  option="$1"
  
	case "$option" in
		'-a' | '--all')
      apps__couchpotato "disable"
      apps__headphones "disable"
      apps__nzbdrone "disable"
      apps__plexserver "disable"
      apps__sabnzbd "disable"
      apps__sickbeard "disable"
      apps__transmission "disable"

			echo
			apps__show_config "--all"
			;;
		'-c' | '--couchpotato')
      apps__couchpotato "disable"
			
			echo
			couchpotato__show_config
			;;
		'-h' | '--headphones')
      apps__headphones "disable"
			
			echo
			headphones__show_config
			;;
		'-n' | '--nzbdrone')
      apps__nzbdrone "disable"
			
			echo
			nzbdrone__show_config
			;;
		'-p' | '--plexserver')
      apps__plexserver "disable"
			
			echo
			plexserver__show_config
			;;
		'-s' | '--sabnzbd')
      apps__sabnzbd "disable"
			
			echo
			sabnzbd__show_config
			;;
		'-b' | '--sickbeard')
      apps__sickbeard "disable"
			
			echo
			sickbeard__show_config
			;; 
		'-t' | '--transmission')
      apps__transmission "disable"
			
			echo
			transmission__show_config
			;;
		*)
			apps__help
	esac
}

function apps__upgrade() {
  option="$1"

	case "$option" in
		'-a' | '--all')
			echo "* Updating apt repository package lists"
			apt-get update

      apps__couchpotato "upgrade"
      apps__headphones "upgrade"
      apps__nzbdrone "upgrade"
      apps__plexserver "upgrade"
      apps__sabnzbd "upgrade"
      apps__sickbeard "upgrade"
      apps__transmission "upgrade"
      ;;
		'-c' | '--couchpotato')
			apps__couchpotato "upgrade"
			;;
		'-h' | '--headphones')
			apps__headphones "upgrade"
			;;
		'-n' | '--nzbdrone')
			echo "* Updating apt repository package lists"
			apt-get update
			
			apps__nzbdrone "upgrade"
			;;
		'-p' | '--plexserver')
			apps__plexserver "upgrade"
			;;
		'-s' | '--sabnzbd')
			echo "* Updating apt repository package lists"
			apt-get update
			
      apps__sabnzbd "upgrade"
			;;
		'-b' | '--sickbeard')
      apps__sickbeard "upgrade"
			;;   
		'-t' | '--transmission')
			echo "* Updating apt repository package lists"
			apt-get update
			
      apps__transmission "upgrade"
			;;
		*)
			apps__help
	esac
}

function apps__set_username() {
  option="$1"
  username="$2"

	case "$option" in
		'-a' | '--all')
      apps__couchpotato "set username" "$username"
      apps__headphones "set username" "$username"
      apps__nzbdrone "set username" "$username"
      apps__sabnzbd "set username" "$username"
      apps__sickbeard "set username" "$username"
      apps__transmission "set username" "$username"

			echo
			apps__show_config "--all"
			;;  
		'-c' | '--couchpotato')
      apps__couchpotato "set username" "$username"
			
			echo
			couchpotato__show_config
			;;
		'-h' | '--headphones')
      apps__headphones "set username" "$username"
			
			echo
			headphones__show_config
			;;
		'-n' | '--nzbdrone')
      apps__nzbdrone "set username" "$username"

			echo
			nzbdrone__show_config
			;;
		'-p' | '--plexserver')
      apps__plexserver "set username" "$username"

			echo
			plexserver__show_config
			;;
		'-s' | '--sabnzbd')
      apps__sabnzbd "set username" "$username"

			echo
			sabnzbd__show_config
			;;
		'-b' | '--sickbeard')
      apps__sickbeard "set username" "$username"
			
			echo
			sickbeard__show_config
			;;  
		'-t' | '--transmission')
      apps__transmission "set username" "$username"
			
			echo
			transmission__show_config
			;;
		*)
			apps__help
	esac
}

function apps__set_password() {
  option="$1"
  password="$2"
  
	case "$option" in
		'-a' | '--all')
      apps__couchpotato "set password" "$password"
      apps__headphones "set password" "$password"
      apps__nzbdrone "set password" "$password"
      apps__sabnzbd "set password" "$password"
      apps__sickbeard "set password" "$password"
      apps__transmission "set password" "$password"

			echo
			apps__show_config "--all"
			;;   
		'-c' | '--couchpotato')
      apps__couchpotato "set password" "$password"
			
			echo
			couchpotato__show_config
			;;
		'-h' | '--headphones')
      apps__headphones "set password" "$password"
			
			echo
			headphones__show_config
			;;
		'-n' | '--nzbdrone')
      apps__nzbdrone "set password" "$password"
			
			echo
			nzbdrone__show_config
			;;
		'-p' | '--plexserver')
      apps__plexserver "set password" "$password"

			echo
			plexserver__show_config
			;;
		'-s' | '--sabnzbd')
      apps__sabnzbd "set password" "$password"
			
			echo
			sabnzbd__show_config
			;;
		'-b' | '--sickbeard')
      apps__sickbeard "set password" "$password"
			
			echo
			sickbeard__show_config
			;; 
		'-t' | '--transmission')
      apps__transmission "set password" "$password"
			
			echo
			transmission__show_config
			;;
		*)
			apps__help
	esac
}

function apps__set_port() {
  option="$1"
  port="$2"

	case "$option" in
		'-a' | '--all')
			echo "The 'set port' command is not available with the '--all' option"
			;;   
		'-c' | '--couchpotato')
      apps__couchpotato "set port" "$port"
			
			echo
			couchpotato__show_config
			;;
		'-h' | '--headphones')
      apps__headphones "set port" "$port"
			
			echo
			headphones__show_config
			;;
		'-n' | '--nzbdrone')
      apps__nzbdrone "set port" "$port"
			
			echo
			nzbdrone__show_config
			;;
		'-p' | '--plexserver')
      apps__plexserver "set port" "$port"

			echo
			plexserver__show_config
			;;
		'-s' | '--sabnzbd')
      apps__sabnzbd "set port" "$port"
			
			echo
			sabnzbd__show_config
			;;
		'-b' | '--sickbeard')
      apps__sickbeard "set port" "$port"
			
			echo
			sickbeard__show_config
			;; 
		'-t' | '--transmission')
      apps__transmission "set port" "$port"

			echo
			transmission__show_config
			;;
		*)
			apps__help
	esac
}

function apps__new_apikey() {
  option="$1"

	case "$option" in
		'-a' | '--all')
      apps__couchpotato "new apikey"
      apps__headphones "new apikey"
      apps__nzbdrone "new apikey"
      apps__sabnzbd "new apikey"
      apps__sickbeard "new apikey"

			echo
			apps__show_config "--all"
			;;  
		'-c' | '--couchpotato')
      apps__couchpotato "new apikey"
			
			echo
			couchpotato__show_config
			;;
		'-h' | '--headphones')
      apps__headphones "new apikey"
			
			echo
			headphones__show_config
			;;
		'-n' | '--nzbdrone')
      apps__nzbdrone "new apikey"

			echo
			nzbdrone__show_config
			;;
		'-p' | '--plexserver')
      apps__plexserver "new apikey"

			echo
			plexserver__show_config
			;;
		'-s' | '--sabnzbd')
      apps__sabnzbd "new apikey"
      
			echo
			sabnzbd__show_config
			;;
		'-b' | '--sickbeard')
      apps__sickbeard "new apikey"
      
			echo
			sickbeard__show_config
			;;  
		'-t' | '--transmission')
      apps__transmission "new apikey"
      
			;;
		*)
			apps__help
	esac
}

function apps__show_config() {
  option="$1"
  
	case "$option" in
		'-a' | '--all')
			tmpfile="/tmp/showconfig.out"
	
			(couchpotato__show_config) > $tmpfile
			echo >> $tmpfile
			echo >> $tmpfile
			(headphones__show_config) >> $tmpfile
			echo >> $tmpfile
			echo >> $tmpfile
			(nzbdrone__show_config) >> $tmpfile
			echo >> $tmpfile
			echo >> $tmpfile
			(plexserver__show_config) >> $tmpfile
			echo >> $tmpfile
			echo >> $tmpfile
			(sabnzbd__show_config) >> $tmpfile
			echo >> $tmpfile
			echo >> $tmpfile
			(sickbeard__show_config) >> $tmpfile
			echo >> $tmpfile
			echo >> $tmpfile
			(transmission__show_config) >> $tmpfile
	
			cat $tmpfile | more
			rm -f $tmpfile > /dev/null 2>&1
			;;
		'-c' | '--couchpotato')
			couchpotato__show_config
			;;
		'-h' | '--headphones')
			headphones__show_config
			;;
		'-n' | '--nzbdrone')
			nzbdrone__show_config
			;;
		'-p' | '--plexserver')
			plexserver__show_config
			;;
		'-s' | '--sabnzbd')
			sabnzbd__show_config
			;;
		'-b' | '--sickbeard')
			sickbeard__show_config
			;;
		'-t' | '--transmission')
			transmission__show_config
			;;
		*)
			apps__help
	esac
}

function apps__couchpotato() {
  option="$1"
  
  if [ "$option" == "enable" ]; then  
		if ! echo "$(couchpotato__get_status)" | grep -q "^Enabled"; then
			# Install the app if not already installed
			if [ "$(couchpotato__get_status)" == "Not Installed" ]; then
				couchpotato__install
			else

				# Upgrade the app if a newer version is available
				if couchpotato__version_check; then
					couchpotato__stop
					couchpotato__upgrade
				fi
			
				# Stop the app
				couchpotato__stop

				# Sync CouchPotato to the current SABnzbd+ config
				echo "* Configuring CouchPotato"
				couchpotato__sabnzbd_sync
			fi
			
			# Enable the app
			couchpotato__enable
		fi
		# Start the app
		couchpotato__start
	
	elif [ "$option" == "disable" ]; then
	  couchpotato__stop
		couchpotato__disable
		
	elif [ "$option" == "upgrade" ]; then
		if couchpotato__version_check; then
			couchpotato__stop
			couchpotato__upgrade
			couchpotato__start
		fi
		
	elif [ "$option" == "set username" ]; then
	  username="$2"
	  
		couchpotato__stop
		echo "* Configuring CouchPotato"
		couchpotato__set_username "$username"
		couchpotato__start

	elif [ "$option" == "set password" ]; then
	  password="$2"
	  
		couchpotato__stop
		echo "* Configuring CouchPotato"
		couchpotato__set_password "$password"
		couchpotato__start
		
	elif [ "$option" == "set port" ]; then
	  port="$2"
	  
		couchpotato__stop
		echo "* Configuring CouchPotato"
		couchpotato__set_port "$port"
		couchpotato__start
		
	elif [ "$option" == "new apikey" ]; then
	  apikey="$(tools__gen_apikey)"
	  
		couchpotato__stop
		echo "* Configuring CouchPotato"
		couchpotato__set_apikey "$apikey"
		couchpotato__start
	fi
}

function apps__headphones() {
  option="$1"
  
  if [ "$option" == "enable" ]; then  
		if ! echo "$(headphones__get_status)" | grep -q "^Enabled"; then
			# Install the app if not already installed
			if [ "$(headphones__get_status)" == "Not Installed" ]; then
				headphones__install
			else

				# Upgrade the app if a newer version is available
				if headphones__version_check; then
					headphones__stop
					headphones__upgrade
				fi
			
				# Stop the app
				headphones__stop

				# Sync Headphones to the current SABnzbd+ config
				echo "* Configuring Headphones"
				headphones__sabnzbd_sync
			fi
			
			# Enable the app
			headphones__enable
		fi
		# Start the app
		headphones__start
	
	elif [ "$option" == "disable" ]; then
	  headphones__stop
		headphones__disable
		
	elif [ "$option" == "upgrade" ]; then
		if headphones__version_check; then
			headphones__stop
			headphones__upgrade
			headphones__start
		fi
		
	elif [ "$option" == "set username" ]; then
	  username="$2"
	  
		headphones__stop
		echo "* Configuring Headphones"
		headphones__set_username "$username"
		headphones__start

	elif [ "$option" == "set password" ]; then
	  password="$2"
	  
		headphones__stop
		echo "* Configuring Headphones"
		headphones__set_password "$password"
		headphones__start
		
	elif [ "$option" == "set port" ]; then
	  port="$2"
	  
		headphones__stop
		echo "* Configuring Headphones"
		headphones__set_port "$port"
		headphones__start
		
	elif [ "$option" == "new apikey" ]; then
	  apikey="$(tools__gen_apikey)"
	  
		headphones__stop
		echo "* Configuring Headphones"
		headphones__set_apikey "$apikey"
		headphones__start
	fi
}

function apps__nzbdrone() {
  option="$1"
  
  if [ "$option" == "enable" ]; then  
		if ! echo "$(nzbdrone__get_status)" | grep -q "^Enabled"; then
			# Install the app if not already installed
			if [ "$(nzbdrone__get_status)" == "Not Installed" ]; then
				nzbdrone__install
			else

			  # Upgrade the app if a newer version is available
			  if nzbdrone__version_check; then
				  nzbdrone__stop
				  nzbdrone__upgrade
			  fi
			
			  # Stop the app
			  nzbdrone__stop

			  # Sync NzbDrone to the current SABnzbd+ config
			  echo "* Configuring NzbDrone"
			  nzbdrone__sabnzbd_sync
			fi
			
			# Enable the app
			nzbdrone__enable
		fi
		# Start the app
		nzbdrone__start
	
	elif [ "$option" == "disable" ]; then
	  nzbdrone__stop
		nzbdrone__disable
		
	elif [ "$option" == "upgrade" ]; then
		if nzbdrone__version_check; then
			nzbdrone__stop
			nzbdrone__upgrade
			nzbdrone__start
		fi
		
	elif [ "$option" == "set username" ]; then
	  username="$2"
	  
		nzbdrone__stop
		echo "* Configuring NzbDrone"
		nzbdrone__set_username "$username"
		nzbdrone__start

	elif [ "$option" == "set password" ]; then
	  password="$2"
	  
		nzbdrone__stop
		echo "* Configuring NzbDrone"
		nzbdrone__set_password "$password"
		nzbdrone__start
		
	elif [ "$option" == "set port" ]; then
	  port="$2"
	  
		nzbdrone__stop
		echo "* Configuring NzbDrone"
		nzbdrone__set_port "$port"
		nzbdrone__start
		
	elif [ "$option" == "new apikey" ]; then
	  apikey="$(tools__gen_apikey)"
	  
		nzbdrone__stop
		echo "* Configuring NzbDrone"
		nzbdrone__set_apikey "$apikey"
		nzbdrone__start
	fi
}

function apps__plexserver() {
  option="$1"
  
  if [ "$option" == "enable" ]; then  
		if ! echo "$(plexserver__get_status)" | grep -q "^Enabled"; then
			# Install the app if not already installed
			if [ "$(plexserver__get_status)" == "Not Installed" ]; then
				plexserver__install
			else

				# Upgrade the app if a newer version is available
				if plexserver__version_check; then
					plexserver__stop
					plexserver__upgrade
				fi
			fi
			
			# Enable the app
			plexserver__enable
		fi
		# Start the app
		plexserver__start
	
	elif [ "$option" == "disable" ]; then
	  plexserver__stop
		plexserver__disable
		
	elif [ "$option" == "upgrade" ]; then
		if plexserver__version_check; then
			plexserver__stop
			plexserver__upgrade
			plexserver__start
		fi
		
	elif [ "$option" == "set username" ]; then
	  echo "The 'set username' command is not available for Plex Media Server"

	elif [ "$option" == "set password" ]; then
	  echo "The 'set password' command is not available for Plex Media Server"
		
	elif [ "$option" == "set port" ]; then
	  echo "The 'set port' command is not available for Plex Media Server"
		
	elif [ "$option" == "new apikey" ]; then
	  echo "The 'new apikey' command is not available for Plex Media Server"
	fi
}

function apps__sabnzbd() {
  option="$1"
  
  if [ "$option" == "enable" ]; then  
		if ! echo "$(sabnzbd__get_status)" | grep -q "^Enabled"; then
			# Install the app if not already installed
			if [ "$(sabnzbd__get_status)" == "Not Installed" ]; then
				sabnzbd__install
			else

				# Upgrade the app if a newer version is available
				if sabnzbd__version_check; then
					sabnzbd__stop
					sabnzbd__upgrade
				fi
			fi
			
			# Enable the app
			sabnzbd__enable
		fi
		# Start the app
		sabnzbd__start
	
	elif [ "$option" == "disable" ]; then
	  sabnzbd__stop
		sabnzbd__disable
		
	elif [ "$option" == "upgrade" ]; then
		if sabnzbd__version_check; then
			sabnzbd__stop
			sabnzbd__upgrade
			sabnzbd__start
		fi
		
	elif [ "$option" == "set username" ]; then
	  username="$2"
	  
		sabnzbd__stop
		echo "* Configuring SABnzbd+"
		sabnzbd__set_username "$username"
		sabnzbd__start

		if echo "$(headphones__get_status)" | grep -q "^Enabled"; then
			headphones__stop
			echo "* Configuring Headphones"
			headphones__set_sabnzbd_username "$username"
			headphones__start
		fi
		if echo "$(nzbdrone__get_status)" | grep -q "^Enabled"; then
			nzbdrone__stop
			echo "* Configuring NzbDrone"
			nzbdrone__set_sabnzbd_username "$username"
			nzbdrone__start
		fi
		if echo "$(sickbeard__get_status)" | grep -q "^Enabled"; then
			echo "* Configuring Sick Beard"
			sickbeard__stop
			sickbeard__set_sabnzbd_username "$username"
			sickbeard__start
		fi

	elif [ "$option" == "set password" ]; then
	  password="$2"
	  
		sabnzbd__stop
		echo "* Configuring SABnzbd+"
		sabnzbd__set_password "$password"
		sabnzbd__start

		if echo "$(headphones__get_status)" | grep -q "^Enabled"; then
			headphones__stop
			echo "* Configuring Headphones"
			headphones__set_sabnzbd_password "$password"
			headphones__start
		fi
		if echo "$(nzbdrone__get_status)" | grep -q "^Enabled"; then
			nzbdrone__stop
			echo "* Configuring NzbDrone"
			nzbdrone__set_sabnzbd_password "$password"
			nzbdrone__start
		fi
		if echo "$(sickbeard__get_status)" | grep -q "^Enabled"; then
			echo "* Configuring Sick Beard"
			sickbeard__stop
			sickbeard__set_sabnzbd_password "$password"
			sickbeard__start
		fi
		
	elif [ "$option" == "set port" ]; then
	  port="$2"
	  
		sabnzbd__stop
		echo "* Configuring SABnzbd+"
		sabnzbd__set_port "$port"
		sabnzbd__start

		if echo "$(headphones__get_status)" | grep -q "^Enabled"; then
			headphones__stop
			echo "* Configuring Headphones"
			headphones__set_sabnzbd_port "$port"
			headphones__start
		fi
		if echo "$(nzbdrone__get_status)" | grep -q "^Enabled"; then
			nzbdrone__stop
			echo "* Configuring NzbDrone"
			nzbdrone__set_sabnzbd_port "$port"
			nzbdrone__start
		fi
		if echo "$(sickbeard__get_status)" | grep -q "^Enabled"; then
			echo "* Configuring Sick Beard"
			sickbeard__stop
			sickbeard__set_sabnzbd_port "$port"
			sickbeard__start
		fi
		
	elif [ "$option" == "new apikey" ]; then
	  apikey="$(tools__gen_apikey)"
	  
		sabnzbd__stop
		echo "* Configuring SABnzbd+"
		sabnzbd__set_apikey "$apikey"
		sabnzbd__start

		if echo "$(headphones__get_status)" | grep -q "^Enabled"; then
			headphones__stop
			echo "* Configuring Headphones"
			headphones__set_sabnzbd_apikey "$apikey"
			headphones__start
		fi
		if echo "$(nzbdrone__get_status)" | grep -q "^Enabled"; then
			nzbdrone__stop
			echo "* Configuring NzbDrone"
			nzbdrone__set_sabnzbd_apikey "$apikey"
			nzbdrone__start
		fi
		if echo "$(sickbeard__get_status)" | grep -q "^Enabled"; then
			echo "* Configuring Sick Beard"
			sickbeard__stop
			sickbeard__set_sabnzbd_apikey "$apikey"
			sickbeard__start
		fi
		
	fi
}

function apps__sickbeard() {
  option="$1"
  
  if [ "$option" == "enable" ]; then  
		if ! echo "$(sickbeard__get_status)" | grep -q "^Enabled"; then
			# Install the app if not already installed
			if [ "$(sickbeard__get_status)" == "Not Installed" ]; then
				sickbeard__install
			else

				# Upgrade the app if a newer version is available
				if sickbeard__version_check; then
					sickbeard__stop
					sickbeard__upgrade
				fi
			
				# Stop the app
				sickbeard__stop

				# Sync Sick Beard to the current SABnzbd+ config
				echo "* Configuring Sick Beard"
				sickbeard__sabnzbd_sync
			fi
			
			# Enable the app
			sickbeard__enable
		fi
		# Start the app
		sickbeard__start
	
	elif [ "$option" == "disable" ]; then
	  sickbeard__stop
		sickbeard__disable
		
	elif [ "$option" == "upgrade" ]; then
		if sickbeard__version_check; then
			sickbeard__stop
			sickbeard__upgrade
			sickbeard__start
		fi
		
	elif [ "$option" == "set username" ]; then
	  username="$2"
	  
		sickbeard__stop
		echo "* Configuring Sick Beard"
		sickbeard__set_username "$username"
		sickbeard__start

	elif [ "$option" == "set password" ]; then
	  password="$2"
	  
		sickbeard__stop
		echo "* Configuring Sick Beard"
		sickbeard__set_password "$password"
		sickbeard__start
		
	elif [ "$option" == "set port" ]; then
	  port="$2"
	  
		sickbeard__stop
		echo "* Configuring Sick Beard"
		sickbeard__set_port "$port"
		sickbeard__start
		
	elif [ "$option" == "new apikey" ]; then
	  apikey="$(tools__gen_apikey)"
	  
		sickbeard__stop
		echo "* Configuring Sick Beard"
		sickbeard__set_apikey "$apikey"
		sickbeard__start
	fi
}

function apps__transmission() {
  option="$1"
  
  if [ "$option" == "enable" ]; then  
		if ! echo "$(transmission__get_status)" | grep -q "^Enabled"; then
			# Install the app if not already installed
			if [ "$(transmission__get_status)" == "Not Installed" ]; then
				transmission__install
			else

				# Upgrade the app if a newer version is available
				if transmission__version_check; then
					transmission__stop
					transmission__upgrade
				fi
			fi
			
			# Enable the app
			transmission__enable
		fi
		# Start the app
		transmission__start
	
	elif [ "$option" == "disable" ]; then
	  transmission__stop
		transmission__disable
		
	elif [ "$option" == "upgrade" ]; then
		if transmission__version_check; then
			transmission__stop
			transmission__upgrade
			transmission__start
		fi
		
	elif [ "$option" == "set username" ]; then
	  username="$2"
	  
		transmission__stop
		echo "* Configuring Transmission"
		transmission__set_username "$username"
		transmission__start

	elif [ "$option" == "set password" ]; then
	  password="$2"
	  
		transmission__stop
		echo "* Configuring Transmission"
		transmission__set_password "$password"
		transmission__start
		
	elif [ "$option" == "set port" ]; then
	  port="$2"
	  
		transmission__stop
		echo "* Configuring Transmission"
		transmission__set_port "$port"
		transmission__start
		
	elif [ "$option" == "new apikey" ]; then
	  echo "The 'new apikey' command is not available for Transmission"

	fi
}