# avoid double inclusion
if test "${plexserver__imported+defined}" == "defined"; then
  return 0
fi
plexserver__imported=1

function plexserver__get_status() {
  if service plexmediaserver status | egrep "start|running" > /dev/null 2>&1; then
    result="Enabled and Running"
  elif ! ls -l /etc/init/plexmediaserver.override > /dev/null 2>&1; then
    result="Not Running"
  else
    result="Disabled"
  fi
  echo "$result"
}

function plexserver__enable() {
  if [ "$(plexserver__get_status)" == "Disabled" ]; then
    rm /etc/init/plexmediaserver.override > /dev/null 2>&1
    if [ "$(tools__path_istype $plexData/.disabled)" == "File" ]; then
      rm -f $plexData/.disabled > /dev/null 2>&1
    fi
    timestamp=$(date "+%Y%m%d%H%M%S")
    sudo su -c -u $osUser "echo $timestamp > $plexData/.enabled"
  fi
  plexserver__start
}

function plexserver__disable() {
  if [ "$(plexserver__get_status)" != "Disabled" ]; then
    plexserver__stop
    echo -e "manual" >> /etc/init/plexmediaserver.override
    if [ "$(tools__path_istype $plexData/.enabled)" == "File" ]; then
      rm -f $plexData/.enabled > /dev/null 2>&1
    fi
    timestamp=$(date "+%Y%m%d%H%M%S")
    sudo su -c -u $osUser "echo $timestamp > $plexData/.disabled"
  fi
}

function plexserver__upgrade() {
  releaseList=$(curl http://tretflix.com/misc/currentPlexReleases.txt 2> /dev/null)
  if uname -a | grep -q "i386"; then
    url=$(echo "$releaseList" | grep "i386.deb")
  else
    url=$(echo "$releaseList" | grep "amd64.deb")
  fi
  
  # Extract the installer filename from the URL
  filename=$(basename "$url")
  
  # Get the installed & candidate versions
  output=$(apt-cache policy plexmediaserver 2>&1)
  installedVers=$(echo "$output" | grep "Installed:" | awk '{ print $2 }')
  candidateVers=$(echo "$filename" | sed 's/^[a-z]*_//g' | sed 's/_.*$//g')
  
  if awk "BEGIN {exit !($candidateVers <= $installedVers)}"; then
    echo "Plex Media Server is already up-to-date..."
  else
    echo "Upgrading Plex Media Server..."
    wget -O /tmp/"$filename" "$url" > /dev/null 2>&1  
    if [ $? -ne 0 ]; then
      echo "Download failed"
      echo
      exit 1
    fi

    plexserver__stop
    gdebi --n /tmp/"$filename" > /dev/null 2>&1
    if [ $? -ne 0 ]; then
      echo "Installation failed"
      echo
      exit 1
    fi
  
    plexserver__start
    rm -f /tmp/"$filename" > /dev/null 2>&1
  fi
}

function plexserver__start() {
  if [ "$(plexserver__get_status)" != "Disabled" ]; then
    for i in {1..3}; do
      if [ $i -gt 1 ]; then
        sleep 5
      fi
      if [ "$(plexserver__get_status)" != "Enabled and Running" ]; then
        service plexmediaserver start > /dev/null 2>&1
      else
        break
      fi
    done
  fi
}

function plexserver__stop() {
  for i in {1..3}; do
    if [ $i -gt 1 ]; then
      sleep 5
    fi
    if [ "$(plexserver__get_status)" == "Enabled and Running" ]; then
      service plexmediaserver stop > /dev/null 2>&1
    else
      break
    fi
  done
}

function plexserver__show_config() {
  status="$(plexserver__get_status)"
  ipv4=$(tools__get_ip)
  port="32400"

  echo "Plex Media Server Config:"
  echo "----------------------------"
  echo "Status: $status"
  if [ "$status" == "Enabled and Running" ]; then
    echo "Web UI: http://$ipv4:$port/web"
  fi
}