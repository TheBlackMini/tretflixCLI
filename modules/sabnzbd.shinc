# avoid double inclusion
if test "${sabnzbd__imported+defined}" == "defined"; then
  return 0
fi
sabnzbd__imported=1

function sabnzbd__get_status() {
  if service sabnzbdplus status 2>&1 | grep -q "unrecognized service"; then
    status="Not Installed"
  elif service sabnzbdplus status > /dev/null 2>&1; then
    if ls /etc/rc?.d/*sabnzbdplus > /dev/null 2>&1; then
      status="Enabled|Running"
    else
      status="Disabled|Running"
    fi
  elif ls /etc/rc?.d/*sabnzbdplus > /dev/null 2>&1; then
    status="Enabled|Stopped"
  else
    status="Disabled|Stopped"
  fi
  echo "$status"
}

function sabnzbd__enable() {
  if echo "$(sabnzbd__get_status)" | grep -q "^Disabled"; then
    echo "* Enabling SABnzbd+"
    update-rc.d sabnzbdplus defaults
  fi
}

function sabnzbd__disable() {
  if echo "$(sabnzbd__get_status)" | grep -q "^Enabled"; then
    echo "* Disabling SABnzbd+"
    update-rc.d -f sabnzbdplus remove
  fi
}

function sabnzbd__start() {
  if echo "$(sabnzbd__get_status)" | grep -q "^Enabled"; then
    for i in {1..3}; do
      if [ $i -gt 1 ]; then
        sleep 2
      fi
      if [ "$(sabnzbd__get_status)" != "Enabled|Running" ]; then
        service sabnzbdplus start
      else
        break
      fi
    done
  fi
}

function sabnzbd__stop() {
  for i in {1..3}; do
    if [ $i -gt 1 ]; then
      sleep 2
    fi
    if [ "$(sabnzbd__get_status)" == "Enabled|Running" ]; then
      service sabnzbdplus stop
    else
      break
    fi
  done
}

function sabnzbd__set_username() {
  username="$1"

  sed -i -e '/^\[misc\]/,/^\[/{/^\[misc\]/n;/^\[/!{s/^[ \t]*username .*/username = '$username'/g}}' $sabnzbdConfig
}

function sabnzbd__set_password() {
  password="$1"

  sed -i -e '/^\[misc\]/,/^\[/{/^\[misc\]/n;/^\[/!{s/^[ \t]*password .*/password = '$password'/g}}' $sabnzbdConfig
}

function sabnzbd__set_port() {
  port="$1"
  
  sed -i -e '/^\[misc\]/,/^\[/{/^\[misc\]/n;/^\[/!{s/^[ \t]*port .*/port = '$port'/g}}' $sabnzbdConfig
}

function sabnzbd__set_apikey() {
  apikey="$1"

  sed -i -e '/^\[misc\]/,/^\[/{/^\[misc\]/n;/^\[/!{s/^[ \t]*api_key .*/api_key = '$apikey'/g}}' $sabnzbdConfig
}

function sabnzbd__get_username() {
  username=$(sed -n '/^\[misc\]/,/^\[/p' $sabnzbdConfig | egrep "(^|^.* )username " | awk '{ print $3 }')
  
  echo "$username"
}

function sabnzbd__get_password() {
  password=$(sed -n '/^\[misc\]/,/^\[/p' $sabnzbdConfig | egrep "(^|^.* )password " | awk '{ print $3 }')
  
  echo "$password"
}

function sabnzbd__get_port() {
  port=$(sed -n '/^\[misc\]/,/^\[/p' $sabnzbdConfig | egrep "(^|^.* )port " | awk '{ print $3 }')
  
  echo "$port"
}

function sabnzbd__get_apikey() {
  apikey=$(sed -n '/^\[misc\]/,/^\[/p' $sabnzbdConfig | egrep "(^|^.* )api_key " | awk '{ print $3 }')
  
  echo "$apikey"
}

function sabnzbd__show_config() {
  status=$(sabnzbd__get_status)
  ipv4=$(tools__get_ip)
  
  username=$(sabnzbd__get_username)
  password=$(sabnzbd__get_password)
  port=$(sabnzbd__get_port)
  apikey=$(sabnzbd__get_apikey)
  
  if echo "$(proxy__get_status)" | egrep -q "^Enabled|Running$"; then
    url="http://$ipv4/sabnzbd"
  else
    url="http://$ipv4:$port/"
  fi

  echo "SABnzbd+ Config:"
  echo "----------------------------"
  echo "Status: $status"
  if [ "$status" == "Enabled|Running" ]; then
    echo "Web UI: $url"
    echo
    echo "Username: $username"
    echo "Password: $password"
    echo "API Key: $apikey"
  fi
}

function sabnzbd__install() {
  echo "* Installing SABnzbd+"
}

function sabnzbd__version_check() {
  output=$(apt-cache policy sabnzbdplus 2>&1)
  installedVers=$(echo "$output" | grep "Installed:" | awk '{ print $2 }')
  candidateVers=$(echo "$output" | grep "Candidate:" | awk '{ print $2 }')

  if [ "$installedVers" == "$candidateVers" ]; then
    echo "SABnzbd+ is up-to-date"
    false
  else
    true
  fi
}

function sabnzbd__upgrade() {
  echo "* Upgrading SABnzbd+"
  apt-get -y install sabnzbdplus
}

function sabnzbd__fixit() {
  echo "Coming Soon..."
}