# avoid double inclusion
if test "${plexmediaserver__imported+defined}" == "defined"; then
  return 0
fi
plexmediaserver__imported=1

function plexmediaserver__get_status() {
  if service plexmediaserver status | egrep "start|running" > /dev/null 2>&1; then
    result="Enabled and Running"
  elif ! ls -l /etc/init/plexmediaserver.override > /dev/null 2>&1; then
    result="Not Running"
  else
    result="Disabled"
  fi
  echo "$result"
}

function plexmediaserver__enable() {
  if [ "$(plexmediaserver__get_status)" == "Disabled" ]; then
    rm /etc/init/plexmediaserver.override > /dev/null 2>&1
    if [ "$(tools__path_istype $plexmediaserver_appdata/.disabled)" == "File" ]; then
      rm -f $plexmediaserver_appdata/.disabled > /dev/null 2>&1
    fi
    timestamp=$(date "+%Y%m%d%H%M%S")
    sudo su -c -u $osUser "echo $timestamp > $plexmediaserver_appdata/.enabled"
  fi
  plexmediaserver__start
}

function plexmediaserver__disable() {
  if [ "$(plexmediaserver__get_status)" != "Disabled" ]; then
    plexmediaserver__stop
    echo -e "manual" >> /etc/init/plexmediaserver.override
    if [ "$(tools__path_istype $plexmediaserver_appdata/.enabled)" == "File" ]; then
      rm -f $plexmediaserver_appdata/.enabled > /dev/null 2>&1
    fi
    timestamp=$(date "+%Y%m%d%H%M%S")
    sudo su -c -u $osUser "echo $timestamp > $plexmediaserver_appdata/.disabled"
  fi
}

function plexmediaserver__upgrade() {
  while true; do
    read -p "Enter the Web URL to the latest .deb (Ubuntu) install file: " input
    case "$input" in
      ?* )
        url="$input"
        filename=$(basename "$url")
        echo
        break;;
      * )
        echo "!! ERROR: Invalid entry."
        echo
    esac
  done

  if ! tools__url_exists "$url"; then
    echo "The URL is invalid, cannot be reached"
    echo
    exit 1
  fi
  
  if ! echo "$url" | grep -q -i ".deb$"; then
    echo "The URL is invalid, not a .deb file"
    echo
    exit 1
  fi
  
  # Verify correct package (x86/x64) for OS
  osBuild=$(uname -a)
  if echo "$osBuild" | grep -q "i386" && echo "$url" | grep -q "amd64.deb$"; then
    echo "The version is mismatched, 32bit .deb needed"
    echo
    exit 1
  elif echo "$osBuild" | grep -q "x86_x64" && echo "$url" | grep -q "i386.deb$"; then
    echo "The version is mismatched, 64bit .deb needed"
    echo
    exit 1
  fi
  
  echo "Downloading .deb file, please wait..."
  wget -O /tmp/"$filename" "$url" > /dev/null 2>&1  
  if [ $? -ne 0 ]; then
    echo "Failed to download the .deb file"
    echo
    exit 1
  fi
  
  echo "Applying changes to Plex Media Server..."
  plexmediaserver__stop
  gdebi --n /tmp/"$filename" > /dev/null 2>&1
  if [ $? -ne 0 ]; then
    echo "Failed to install the .deb file"
    echo
    exit 1
  fi
  
  plexmediaserver__start
  
  rm -f /tmp/"$filename" > /dev/null 2>&1
}

function plexmediaserver__start() {
  if [ "$(plexmediaserver__get_status)" != "Disabled" ]; then
    for i in {1..3}; do
      if [ $i -gt 1 ]; then
        sleep 5
      fi
      if [ "$(plexmediaserver__get_status)" != "Enabled and Running" ]; then
        service plexmediaserver start > /dev/null 2>&1
      else
        break
      fi
    done
  fi
}

function plexmediaserver__stop() {
  for i in {1..3}; do
    if [ $i -gt 1 ]; then
      sleep 5
    fi
    if [ "$(plexmediaserver__get_status)" == "Enabled and Running" ]; then
      service plexmediaserver stop > /dev/null 2>&1
    else
      break
    fi
  done
}

function plexmediaserver__show_config() {
  status="$(plexmediaserver__get_status)"
  ipv4=$(tools__get_ip)
  port="32400"

  echo "Plex Media Server Config:"
  echo "----------------------------"
  echo "Status: $status"
  if [ "$status" == "Enabled and Running" ]; then
    echo "Web UI: http://$ipv4:$port/web"
  fi
}