# avoid double inclusion
if test "${shares__imported+defined}" == "defined"; then
  return 0
fi
shares__imported=1

function shares__help() {
  echo "Usage: tretflix shares [COMMAND] [INPUT] [OPTION]"
  echo
  echo "COMMANDS:"
  echo "  tretflix shares add cifs [HOST] [SHARE] [OPTION] ..."
  echo "  tretflix shares del cifs [HOST] [SHARE]"
  echo "  tretflix shares add nfs [HOST] [SHARE]"
  echo "  tretflix shares del nfs [HOST] [SHARE]"
  echo "  tretflix shares show config"
  echo
  echo "OPTIONS:"
  echo "  -u, --user [USERNAME] [PASSWORD]"
  echo
  exit 1
}

function shares__root() {
  if test "${CLI_ARGS[2]+isset}"; then
    case "${CLI_ARGS[1]} ${CLI_ARGS[2]}" in
    	'add cifs')
    	  shares__add_cifs
    	  ;;
    	'del cifs')
    	  shares__del_cifs
    	  ;;
    	'add nfs')
    	  shares__add_nfs
    	  ;;
    	'del nfs')
    	  shares__del_nfs
    	  ;;    	  
      'show config')
        shares__show_config
        ;;
      *)
        shares__help
    esac
  else
    shares__help
  fi
}

function shares__add_cifs() {
  if [ "${#CLI_ARGS[@]}" -eq 5 ]; then
    authType="Anonymous"
    tools__cifs_test ${CLI_ARGS[3]} ${CLI_ARGS[4]}
  elif [ "${#CLI_ARGS[@]}" -eq 8 ]; then
    case "${CLI_ARGS[5]}" in
      '-u' | '--user')
        authType="User"
        tools__cifs_test ${CLI_ARGS[3]} ${CLI_ARGS[4]} ${CLI_ARGS[6]} ${CLI_ARGS[7]}
        ;;
      *)
        shares__help
    esac
  else
    shares__help
  fi

  if [ $? -eq 0 ]; then

    share="//${CLI_ARGS[3]}/${CLI_ARGS[4]}"
    mountPoint="/mnt/${CLI_ARGS[3]}/${CLI_ARGS[4]}"
    
    share=$(echo "$share" | tr '[:upper:]' '[:lower:]')
    mountPoint=$(echo "$mountPoint" | tr '[:upper:]' '[:lower:]')

    if [ "$authType" == "Anonymous" ]; then
      mountCmd="$share $mountPoint cifs auto,sec=ntlm 0 0"
    else
      mountCmd="$share $mountPoint cifs auto,sec=ntlm,username=${CLI_ARGS[6]},password=${CLI_ARGS[7]} 0 0"
    fi

    if tools__share_exists $share $mountPoint; then
      echo "The CIFS share '$share' already exists in /etc/fstab"
      exit 1
    elif tools__mountpoint_exists $mountPoint; then
      echo "The mount point '$mountPoint' already exists in /etc/fstab"
      exit 1
    fi

    if tools__path_exists $mountPoint; then
      if [ "$(tools__path_istype $mountPoint)" != "Directory" ]; then
        echo "The moint point '$mountPoint' already exists and cannot be used"
        exit 1
      elif ! tools__dir_isempty $mountPoint; then
        echo "The mount point '$mountPoint' is not empty and cannot be used"
        exit 1
      fi
    else
      mkdir -p $mountPoint
      if [ $? -ne 0 ]; then
        echo "Failed to create the mount point '$mountPoint'"
        exit 1
      fi
    fi
    
    sudo su -c "echo -e '$mountCmd' >> /etc/fstab"
    sudo mount $mountPoint
    if [ $? -eq 0 ]; then
      echo "CIFS share added"
    else
      echo "Failed to mount the CIFS share '$share'"
      exit 1
    fi
  else
    exit 1
  fi
}

function shares__del_cifs() {
  if [ "${#CLI_ARGS[@]}" -eq 5 ]; then
    share="//${CLI_ARGS[3]}/${CLI_ARGS[4]}"
    mountPoint="/mnt/${CLI_ARGS[3]}/${CLI_ARGS[4]}"
    
    share=$(echo "$share" | tr '[:upper:]' '[:lower:]')
    mountPoint=$(echo "$mountPoint" | tr '[:upper:]' '[:lower:]')

    if tools__share_exists $share $mountPoint; then

      if tools__share_isactive $share $mountPoint; then
        sudo umount $mountPoint
        if [ $? -ne 0 ]; then
          echo "Failed to unmount the CIFS share"
          exit 1
        fi
      fi

      sudo sed -i '\#^'"$share"' '"$mountPoint"'#d' /etc/fstab
      if ! tools__share_exists $share $mountPoint; then
        echo "CIFS share removed"
      else
        echo "Failed to remove the CIFS share entry from /etc/fstab"
        exit 1
      fi

    else
      echo "No such CIFS share entry found in /etc/fstab"
      exit 1
    fi

  else
    shares__help
  fi
}

function shares__add_nfs() {
  if [ "${#CLI_ARGS[@]}" -eq 5 ]; then
    tools__nfs_test ${CLI_ARGS[3]} ${CLI_ARGS[4]}
  else
    shares__help
  fi

  if [ $? -eq 0 ]; then

    share="${CLI_ARGS[3]}:${CLI_ARGS[4]}"
    mountPoint="/mnt/${CLI_ARGS[3]}${CLI_ARGS[4]}"
    
    share=$(echo "$share" | tr '[:upper:]' '[:lower:]')
    mountPoint=$(echo "$mountPoint" | tr '[:upper:]' '[:lower:]')

    mountCmd="$share $mountPoint nfs auto 0 0"

    if tools__share_exists $share $mountPoint; then
      echo "The NFS share '$share' already exists in /etc/fstab"
      exit 1
    elif tools__mountpoint_exists $mountPoint; then
      echo "The mount point '$mountPoint' already exists in /etc/fstab"
      exit 1
    fi

    if tools__path_exists $mountPoint; then
      if [ "$(tools__path_istype $mountPoint)" != "Directory" ]; then
        echo "The moint point '$mountPoint' already exists and cannot be used"
        exit 1
      elif ! tools__dir_isempty $mountPoint; then
        echo "The mount point '$mountPoint' is not empty and cannot be used"
        exit 1
      fi
    else
      mkdir -p $mountPoint
      if [ $? -ne 0 ]; then
        echo "Failed to create the mount point '$mountPoint'"
        exit 1
      fi
    fi

    sudo su -c "echo -e '$mountCmd' >> /etc/fstab"
    sudo mount $mountPoint
    if [ $? -eq 0 ]; then
      echo "NFS share added"
    else
      echo "Failed to mount the NFS share '$share'"
      exit 1
    fi
  else
    exit 1
  fi
}

function shares__del_nfs() {
  if [ "${#CLI_ARGS[@]}" -eq 5 ]; then
    share="${CLI_ARGS[3]}:${CLI_ARGS[4]}"
    mountPoint="/mnt/${CLI_ARGS[3]}${CLI_ARGS[4]}"
    
    share=$(echo "$share" | tr '[:upper:]' '[:lower:]')
    mountPoint=$(echo "$mountPoint" | tr '[:upper:]' '[:lower:]')

    if tools__share_exists $share $mountPoint; then

      if tools__share_isactive $share $mountPoint; then
        sudo umount $mountPoint
        if [ $? -ne 0 ]; then
          echo "Failed to unmount the NFS share"
          exit 1
        fi
      fi

      sudo sed -i '\#^'"$share"' '"$mountPoint"'#d' /etc/fstab
      if ! tools__share_exists $share $mountPoint; then
        echo "NFS share removed"
      else
        echo "Failed to remove the NFS share entry from /etc/fstab"
        exit 1
      fi

    else
      echo "No such NFS share entry found in /etc/fstab"
      exit 1
    fi

  else
    shares__help
  fi
}

function shares__show_config() {
  if [ "${#CLI_ARGS[@]}" -eq 3 ]; then
    if df -hT | egrep -q "[[:space:]]cifs[[:space:]]|[[:space:]]nfs[[:space:]]"; then
      echo
      df -hT | egrep "^Filesystem[[:space:]]|[[:space:]]cifs[[:space:]]|[[:space:]]nfs[[:space:]]"
      echo      
    else
      echo "There are no mounted shares"
      exit 1
    fi
  else
    shares__help
  fi
}