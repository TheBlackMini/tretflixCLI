# avoid double inclusion
if test "${scheduler__imported+defined}" == "defined"; then
  return 0
fi
scheduler__imported=1

function scheduler__help() {
  echo "Usage: tretflix scheduler [COMMAND] [OPTION]"
  echo
  echo "COMMANDS:"
  echo "  tretflix scheduler app upgrades [OPTION]"
  echo "  tretflix scheduler tmp cleanup [OPTION]"
  echo
  echo "OPTIONS:"
  echo "  -e, --enable"
  echo "  -d, --disable"
  echo
  echo "NOTES:"
  echo "  Enable 'app upgrades' to check for and upgrade all apps"
  echo "  daily at 2am. Enable 'tmp cleanup' to automatically purge"
  echo "  abandoned tmp files/dirs daily at 1am."
  echo
  exit 1
}

function scheduler__command_handler() {
  if test "${CLI_ARGS[2]+isset}"; then
    case "${CLI_ARGS[1]} ${CLI_ARGS[2]}" in
      'app upgrades')
        scheduler__app_upgrades
        ;;
      'tmp cleanup')
        scheduler__tmp_cleanup
        ;;
      *)
        scheduler__help
    esac
  else
    scheduler__help
  fi
}

function scheduler__app_upgrades() {
  if [ "${#CLI_ARGS[@]}" -eq 4 ]; then
    case "${CLI_ARGS[3]}" in
      '-d' | '--disable')
        option="disable"
        ;;
      '-e' | '--enable')
        option="enable"
        ;;
      *)
        scheduler__help
    esac
  else
    scheduler__help
  fi
  
  echo $option
}

function scheduler__tmp_cleanup() {
  if [ "${#CLI_ARGS[@]}" -eq 4 ]; then
    case "${CLI_ARGS[3]}" in
      '-d' | '--disable')
        option="disable"
        ;;
      '-e' | '--enable')
        option="enable"
        ;;
      *)
        scheduler__help
    esac
  else
    scheduler__help
  fi
  
  echo $option
}

