# avoid double inclusion
if test "${transmission__imported+defined}" == "defined"; then
  return 0
fi
transmission__imported=1

function transmission__get_status() {
  if service transmission-daemon status > /dev/null 2>&1; then
    result="Enabled and Running"
  elif ls /etc/rc?.d/*transmission-daemon > /dev/null 2>&1; then
    result="Not Running"
  else
    result="Disabled"
  fi
  echo "$result"
}

function transmission__enable() {
  if [ "$(transmission__get_status)" == "Disabled" ]; then
    update-rc.d transmission-daemon defaults > /dev/null 2>&1
    if [ "$(tools__path_istype $transmission_appdata/.disabled)" == "File" ]; then
      rm -f $transmission_appdata/.disabled > /dev/null 2>&1
    fi
    timestamp=$(date "+%Y%m%d%H%M%S")
    sudo su -c -u $osUser "echo $timestamp > $transmission_appdata/.enabled"
  fi
  transmission__start
}

function transmission__disable() {
  if [ "$(transmission__get_status)" != "Disabled" ]; then
    transmission__stop
    update-rc.d -f transmission-daemon remove > /dev/null 2>&1
    if [ "$(tools__path_istype $transmission_appdata/.enabled)" == "File" ]; then
      rm -f $transmission_appdata/.enabled > /dev/null 2>&1
    fi
    timestamp=$(date "+%Y%m%d%H%M%S")
    sudo su -c -u $osUser "echo $timestamp > $transmission_appdata/.disabled"
  fi
}

function transmission__upgrade() {
  transmission__stop
  
  output=$(apt-cache policy transmission-daemon 2>&1)
  installedVers=$(echo "$output" | grep "Installed:" | awk '{ print $2 }')
  candidateVers=$(echo "$output" | grep "Candidate:" | awk '{ print $2 }')
  
  echo "Upgrading Transmission..."
  if [ "$installedVers" != "$candidateVers" ]; then
    apt-get -y install transmission-daemon > /dev/null 2>&1
  fi
  
  transmission__start
}

function transmission__start() {
  if [ "$(transmission__get_status)" != "Disabled" ]; then
    for i in {1..3}; do
      if [ $i -gt 1 ]; then
        sleep 2
      fi
      if [ "$(transmission__get_status)" != "Enabled and Running" ]; then
        service transmission-daemon start > /dev/null 2>&1
      else
        break
      fi
    done
  fi
}

function transmission__stop() {
  for i in {1..3}; do
    if [ $i -gt 1 ]; then
      sleep 2
    fi
    if [ "$(transmission__get_status)" == "Enabled and Running" ]; then
      service transmission-daemon stop > /dev/null 2>&1
    else
      break
    fi
  done
}

function transmission__set_username() {
  username="$1"

  sed -i -e 's/"rpc-username".*/"rpc-username": "'$username'",/g' $transmission_config
}

function transmission__set_password() {
  password="$1"

  sed -i -e 's/"rpc-password".*/"rpc-password": "'$password'",/g' $transmission_config
}

function transmission__set_port() {
  port="$1"

  sed -i -e 's/"rpc-port".*/"rpc-port": '$port',/g' $transmission_config
}

function transmission__show_config() {
  status="$(transmission__get_status)"
  ipv4=$(tools__get_ip)
  username=$(grep "rpc-username" $transmission_config | awk '{ print $2 }' | awk -F '"' '{ print $2 }')
  password="N/A (ENCRYPTED)"
  port=$(grep "rpc-port" $transmission_config | awk '{ print $2 }' | sed 's/,$//g')

  echo "Transmission Config:"
  echo "----------------------------"
  echo "Status: $status"
  if [ "$status" == "Enabled and Running" ]; then
    echo "Web UI: http://$ipv4:$port/transmission/web/"
    echo
    echo "Username: $username"
    echo "Password: $password"
  fi
}