# avoid double inclusion
if test "${update__imported+defined}" == "defined"; then
  return 0
fi
update__imported=1

function update__help() {
  echo "Usage: tretflix update [COMMAND] [OPTION]"
  echo
  echo "COMMANDS:"
  echo "  tretflix update cli [OPTION] ..."
  echo
  echo "OPTIONS:"
  echo "  -b, --branch [NAME]"
  echo
  exit 1
}

function update__command_handler() {
  if test "${CLI_ARGS[1]+isset}"; then
    case "${CLI_ARGS[1]}" in
    	'cli')
    	  update__cli
    	  ;;
      *)
        update__help
    esac
  else
    update__help
  fi
}

function update__cli() {
  if [ "${#CLI_ARGS[@]}" -eq 2 ]; then
    if cd $CLIRepoDir && git fetch -v --dry-run 2>&1 | grep "master" | grep -q "up to date"; then
      echo "Tretflix CLI is already up to date."
    else
      sudo su -c -u $osUser "cd $CLIRepoDir && git fetch"
      sudo su -c -u $osUser "cd $CLIRepoDir && git reset --hard origin/master"
      chmod +x "$0"
    fi
  elif [ "${#CLI_ARGS[@]}" -eq 4 ]; then
    case "${CLI_ARGS[2]}" in
      '-b' | '--branch')
        branch="${CLI_ARGS[3]}"
        branch=$(echo "$branch" | tr '[:upper:]' '[:lower:]')
        if [ "$branch" == "master" ] || [ "$branch" == "develop" ]; then
          if cd $CLIRepoDir && git fetch -v --dry-run 2>&1 | grep "$branch" | grep -q "up to date"; then
            echo "Tretflix CLI is already up to date."
          else
            sudo su -c -u $osUser "cd $CLIRepoDir && git fetch"
            sudo su -c -u $osUser "cd $CLIRepoDir && git reset --hard origin/$branch"
            chmod +x "$0"
          fi
        else
          echo "Invalid branch name."
          echo
          exit 1
        fi
        ;;
      *)
        update__help
    esac
  else
    update__help
  fi
}